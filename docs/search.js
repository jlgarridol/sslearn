window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"sslearn": {"fullname": "sslearn", "modulename": "sslearn", "kind": "module", "doc": "<h1 id=\"semi-supervised-learning-library-sslearn\">Semi-Supervised Learning Library (sslearn)</h1>\n\n<p><!-- Insert logo in the middle -->\n<img width=\"100%\" src=\"https://raw.githubusercontent.com/jlgarridol/sslearn/main/docs/sslearn.webp\"/></p>\n\n<p><img src=\"https://img.shields.io/codeclimate/maintainability-percentage/jlgarridol/sslearn\" alt=\"Code Climate maintainability\" /> <img src=\"https://img.shields.io/codeclimate/coverage/jlgarridol/sslearn\" alt=\"Code Climate coverage\" /> <img src=\"https://img.shields.io/github/actions/workflow/status/jlgarridol/sslearn/python-package.yml\" alt=\"GitHub Workflow Status\" /> <img src=\"https://img.shields.io/pypi/v/sslearn\" alt=\"PyPI - Version\" /> <a href=\"https://jlgarridol.github.io/sslearn/\"><img src=\"https://img.shields.io/badge/doc-available-blue?style=flat\" alt=\"Static Badge\" /></a></p>\n\n<p>The <code>sslearn</code> library is a Python package for machine learning over Semi-supervised datasets. It is an extension of <a href=\"https://github.com/scikit-learn/scikit-learn\">scikit-learn</a>.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<h3 id=\"dependencies\">Dependencies</h3>\n\n<ul>\n<li>joblib &gt;= 1.2.0</li>\n<li>numpy &gt;= 1.23.3</li>\n<li>pandas &gt;= 1.4.3</li>\n<li>scikit_learn &gt;= 1.2.0</li>\n<li>scipy &gt;= 1.10.1</li>\n<li>statsmodels &gt;= 0.13.2</li>\n<li>pytest = 7.2.0 (only for testing)</li>\n</ul>\n\n<h3 id=\"pip-installation\"><code>pip</code> installation</h3>\n\n<p>It can be installed using <em>Pypi</em>:</p>\n\n<pre><code>pip install sslearn\n</code></pre>\n\n<h2 id=\"citing\">Citing</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nc\">@software</span><span class=\"p\">{</span><span class=\"nl\">garrido2024sslearn</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"na\">author</span><span class=\"w\">       </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{Jos\u00e9 Luis Garrido-Labrador}</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"na\">title</span><span class=\"w\">        </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{jlgarridol/sslearn}</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"na\">month</span><span class=\"w\">        </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nv\">feb</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"na\">year</span><span class=\"w\">         </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"m\">2024</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"na\">publisher</span><span class=\"w\">    </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{Zenodo}</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"na\">doi</span><span class=\"w\">          </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">{10.5281/zenodo.7565221}</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<h2 id=\"fundings\">Fundings</h2>\n\n<p>The research carried out for the development of this software has been partially funded by the Junta de Castilla y Le\u00f3n (project BU055P20), by the Ministry of Science and Innovation of Spain (projects PID2020-119894GB-I00 and TED 2021-129485B-C43) and by the project AIM-LAC (EP/S023992 /1). The author has been a beneficiary of the predoctoral scholarship from the Ministry of Education of the Junta de Castilla y Le\u00f3n EDU/875/2021.</p>\n\n<p><!--Add the funding picture-->\n<img width=\"100%\" src=\"https://raw.githubusercontent.com/admirable-ubu/DN-SSL/main/funding/funding_project.svg\" />\n<img width=\"100%\" src=\"https://raw.githubusercontent.com/admirable-ubu/DN-SSL/main/funding/funding_project_cyl.svg\" /></p>\n\n<hr />\n\n<hr />\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>In this page we provide some code examples to show how to use the library. Also, exists a <a href=\"https://colab.research.google.com/drive/1wKSz-f7N4elqQwz_phrWXDrf3lRqaD6s#scrollTo=KS-6GNxCayxf\">Jupyter Notebook</a> with the same examples to run in Google Colab.</p>\n\n<h6 id=\"datasets-manipulation\">Datasets manipulation</h6>\n\n<p>SSLearn include tools for loading csv and dat (KEEL) datasets. Also, it provides a function to generate a semi-supervised dataset from a labeled dataset.</p>\n\n<h3 id=\"load-a-csv-or-a-dat-keel-dataset\">Load a CSV or a DAT (KEEL)  dataset</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">read_csv</span><span class=\"p\">,</span> <span class=\"n\">read_keel</span>\n\n<span class=\"c1\"># The CSV file must have the target column in the last position by default.</span>\n<span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span> <span class=\"o\">=</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">&#39;iris.csv&#39;</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;numpy&#39;</span><span class=\"p\">)</span> <span class=\"c1\"># Format can be &#39;numpy&#39; or &#39;pandas&#39;</span>\n\n<span class=\"c1\"># The DAT file must have the target column in the first position by default. Also, the instances with class &quot;unlabeled&quot; will change to -1.</span>\n<span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span> <span class=\"o\">=</span> <span class=\"n\">read_keel</span><span class=\"p\">(</span><span class=\"s1\">&#39;iris.dat&#39;</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;numpy&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"generate-a-unsupervised-dataset-from-a-labeled-dataset\">Generate a unsupervised dataset from a labeled dataset</h3>\n\n<p>To test the semi-supervised algorithms, we need to generate a dataset with some instances without labels. The library provides a function to do this. </p>\n\n<p>Exists two ways to generate the dataset:</p>\n\n<ol>\n<li>Randomly select some instances to be unlabeled giving a percentage of labeled instances.</li>\n<li>Generate folds where one fold is the labeled dataset and the others are unlabeled.</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"c1\"># Using the previous dataset &quot;X_iris&quot; and &quot;y_iris&quot;</span>\n<span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">X_u</span><span class=\"p\">,</span> <span class=\"n\">y_y</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span> <span class=\"c1\"># 80% of the instances are unlabeled</span>\n<span class=\"c1\"># or if you want also get the indexes of the instances</span>\n<span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">X_u</span><span class=\"p\">,</span> <span class=\"n\">y_y</span><span class=\"p\">,</span> <span class=\"n\">idx_label</span><span class=\"p\">,</span> <span class=\"n\">idx_u</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><code>artificial_ssl_dataset</code> supports stratify and shuffle as it works in <code>train_test_split</code> from <code>sklearn.model_selection</code>. Also, a minimum number of instances per class can be set with the parameter <code>force_minimum</code>.</p>\n\n<p>The other way to generate the dataset is using the <code>StratifiedKFoldSS</code> class.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">StratifiedKFoldSS</span>\n\n<span class=\"n\">skss</span> <span class=\"o\">=</span> <span class=\"n\">StratifiedKFoldSS</span><span class=\"p\">(</span><span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span> <span class=\"c1\"># 10 folds, that implies 10% of the instances are labeled</span>\n\n<span class=\"k\">for</span> <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">label_indices</span><span class=\"p\">,</span> <span class=\"n\">unlabel_indices</span> <span class=\"ow\">in</span> <span class=\"n\">skss</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span><span class=\"p\">):</span>\n    <span class=\"c1\"># It works like the StratifiedKFold from sklearn.model_selection</span>\n    <span class=\"k\">pass</span> <span class=\"c1\"># Here you can use the labeled and unlabeled instances</span>\n</code></pre>\n</div>\n\n<p><code>X_train</code> and <code>y_train</code> are the set ready to be used in a semi-supervised algorithm, with the \"-1\" in the target column for the unlabeled instances.</p>\n\n<h6 id=\"wrappers\">Wrappers</h6>\n\n<p>The wrappers are the most widely used algorithms in the semi-supervised learning field. The library includes the most popular ones. The algorithms included are:</p>\n\n<ul>\n<li><code>SelfTraining</code>: Self-training algorithm for one classifier.</li>\n<li><code>Setred</code>: Self-training with data amendment.</li>\n<li><code>CoTraining</code>: The co-training algorithm for two views, supports multi-learning and requires two views.</li>\n<li><code>Rasco</code>: Random subspace co-training, supports multi-learning.</li>\n<li><code>RelRasco</code>: Relevant random subspace co-training, supports multi-learning.</li>\n<li><code>DemocraticCoLearning</code>: Democratic co-learning algorithm, only for multi-learning.</li>\n<li><code>CoForest</code>: Co-training version of Random Forest.</li>\n<li><code>CoTrainingByCommittee</code>: Co-training by committee algorithm, a.k.a. CoBagging or CoBoosting depending on the base classifier in the literature.</li>\n<li><code>TriTraining</code>: Tri-training algorithm, supports multi-learning.</li>\n<li><code>DeTriTraining</code>: Tri-training with data amendment, supports multi-learning.</li>\n</ul>\n\n<p>The wrappers follow the same structure as the classifiers in scikit-learn. Use <code>fit</code> to train the model and <code>predict</code> to predict the target column. Also, the <code>score</code> method is available to get the accuracy of the model.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Using the previous dataset &quot;X_train&quot; and &quot;y_train&quot; </span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CoForest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">accuracy_score</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span>\n\n<span class=\"c1\"># Load dataset</span>\n<span class=\"n\">X_iris_train</span><span class=\"p\">,</span> <span class=\"n\">y_iris_train</span><span class=\"p\">,</span> <span class=\"n\">X_iris_U</span><span class=\"p\">,</span> <span class=\"n\">y_iris_U</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create the wrapper</span>\n<span class=\"n\">coforest</span> <span class=\"o\">=</span> <span class=\"n\">CoForest</span><span class=\"p\">(</span><span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"c1\"># Train</span>\n<span class=\"n\">coforest</span><span class=\"o\">.</span><span class=\"n\">fir</span><span class=\"p\">(</span><span class=\"n\">X_iris_train</span><span class=\"p\">,</span> <span class=\"n\">y_iris_train</span><span class=\"p\">)</span>\n<span class=\"c1\"># Predict</span>\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">coforest</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_iris_U</span><span class=\"p\">)</span>\n<span class=\"c1\"># Score</span>\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">accuracy_score</span><span class=\"p\">(</span><span class=\"n\">y_iris_U</span><span class=\"p\">,</span> <span class=\"n\">y_pred</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Each wrapper has its parameters, some of them need different views, have specific parameters, or need a kind of base classifiers. The documentation of each wrapper explains the parameters and the requirements and provides examples of how to use them.</p>\n\n<p>The wrappers that supports multi-learning can recive differents algorithms as base classifiers. The base classifiers must be a list of classifiers. </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">DemocraticCoLearning</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.neighbors</span> <span class=\"kn\">import</span> <span class=\"n\">KNeighborsClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.naive_bayes</span> <span class=\"kn\">import</span> <span class=\"n\">GaussianNB</span>\n\n<span class=\"c1\"># Load dataset</span>\n<span class=\"n\">X_iris_train</span><span class=\"p\">,</span> <span class=\"n\">y_iris_train</span><span class=\"p\">,</span> <span class=\"n\">X_iris_U</span><span class=\"p\">,</span> <span class=\"n\">y_iris_U</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X_iris</span><span class=\"p\">,</span> <span class=\"n\">y_iris</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create the wrapper</span>\n<span class=\"n\">democratic</span> <span class=\"o\">=</span> <span class=\"n\">DemocraticCoLearning</span><span class=\"p\">(</span><span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">KNeighborsClassifier</span><span class=\"p\">(),</span> <span class=\"n\">GaussianNB</span><span class=\"p\">()],</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"c1\"># Train</span>\n<span class=\"n\">democratic</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_iris_train</span><span class=\"p\">,</span> <span class=\"n\">y_iris_train</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"the-multiview-adapters\">The multiview adapters</h3>\n\n<p><code>CoTraining</code> is the only wrapper that supports different views. But, the library provides an adapter to provide a different view to the other wrappers. The adapters are in the <code>sslearn.subview</code> module. Supports classification and regression problems.</p>\n\n<p>That adapter create a subview for the dataset, and when the wrapper train the base classifiers, each will be trained with the view defined in the adapter. It supports three modes of create subviews: </p>\n\n<ul>\n<li><code>regex</code>: The columns that match the regex will be in the subview.</li>\n<li><code>columns</code>: The columns that are in the list will be in the subview.</li>\n<li><code>include</code>: The columns whose names are in the list will be in the subview. </li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.subview</span> <span class=\"kn\">import</span> <span class=\"n\">SubViewClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n\n<span class=\"c1\"># Load dataset </span>\n<span class=\"n\">X_breast</span><span class=\"p\">,</span> <span class=\"n\">y_breast</span> <span class=\"o\">=</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">&#39;breast-cancer.csv&#39;</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;numpy&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">X_breast_train</span><span class=\"p\">,</span> <span class=\"n\">y_breast_train</span><span class=\"p\">,</span> <span class=\"n\">X_breast_U</span><span class=\"p\">,</span> <span class=\"n\">y_breast_U</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X_breast</span><span class=\"p\">,</span> <span class=\"n\">y_breast</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span> \n<span class=\"c1\"># Create the the adapter</span>\n<span class=\"n\">subview1</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"s2\">&quot;breast&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;include&#39;</span><span class=\"p\">)</span> <span class=\"c1\"># The columns `breast` and `breast-quad`</span>\n<span class=\"n\">subview2</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;menopause&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;irradiant&quot;</span><span class=\"p\">],</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;columns&#39;</span><span class=\"p\">)</span> <span class=\"c1\"># The columns `age`, `menopause`, and `irradiant`</span>\n<span class=\"n\">subview3</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"s2\">&quot;.*&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;regex&#39;</span><span class=\"p\">)</span> <span class=\"c1\"># All the columns</span>\n<span class=\"c1\"># Create a TriTraining wrapper with the subviews</span>\n<span class=\"n\">tritraining</span> <span class=\"o\">=</span> <span class=\"n\">TriTraining</span><span class=\"p\">(</span><span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">subview1</span><span class=\"p\">,</span> <span class=\"n\">subview2</span><span class=\"p\">,</span> <span class=\"n\">subview3</span><span class=\"p\">],</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The wrappers that support multi-learning can be used with the subview adapters. The adapters are in the <code>sslearn.subview</code> module. </p>\n\n<h3 id=\"restricted-set-classification\">Restricted set classification</h3>\n\n<p>The RSC algorithms support datasets with pairwise constraints. The library provides the <code>WhoIsWhoClassifier</code>, the <code>feature_fusion</code> and <code>probability_fusion</code> methods.\n<code>WhoIsWhoClassifier</code> is a wrapper that uses the RSC algorithms and supports only cannot-link constraints. The <code>feature_fusion</code> and <code>probability_fusion</code> methods supports both constraints but only in prediction time. All algorithms are in the <code>sslearn.restriced</code> module.</p>\n\n<p>The complete example is avaliable in the <a href=\"https://colab.research.google.com/drive/1wKSz-f7N4elqQwz_phrWXDrf3lRqaD6s#scrollTo=mF32Wps3pIR5\">Jupyter Notebook</a>. Here is a snippet of the code with the dataset and the constraints already loaded.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">wiw</span> <span class=\"o\">=</span> <span class=\"n\">WhoIsWhoClassifier</span><span class=\"p\">(</span><span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span>\n                         <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">&quot;hungarian&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># The method can ben `hungarian` and `greedy`</span>\n<span class=\"n\">wiw</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">cannot_link_train</span><span class=\"p\">)</span>\n<span class=\"n\">y_predicted</span> <span class=\"o\">=</span> <span class=\"n\">wiw</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">cannot_link_test</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>For <code>WhoIsWhoClassifier</code> the cannot-link constraints must be an array that the size is the number of instances in the dataset. Each index is mapped to the instance in the dataset. If two instances or more cannot-link the value must be the same in the array.</p>\n\n<p>For the <code>feature_fusion</code> and <code>probability_fusion</code> methods, the constraints must be in dictionary format. The values are the instances that cannot-link or must-link. The keys represent the group of instances, but normaly is the first instance in the group (to ensure differents groups not have the same key). That methods requires a pre-trained model.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">estimator</span> <span class=\"o\">=</span> <span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">y_predicted_f</span> <span class=\"o\">=</span> <span class=\"n\">feature_fusion</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">must_link_test_dict</span><span class=\"p\">,</span> <span class=\"n\">cannot_link_test_dict</span><span class=\"p\">)</span>\n<span class=\"n\">y_predicted_p</span> <span class=\"o\">=</span> <span class=\"n\">probability_fusion</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">must_link_test_dict</span><span class=\"p\">,</span> <span class=\"n\">cannot_link_test_dict</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><code>feature_fusion</code> combine the features of the instances that must-link replacing the features for the average of the features in the group. With <code>probability_fusion</code> the post-probabilities of the instances that must-link are averaged. In both cases it uses the hungarian algorithm to solve the cannot-link constraints.</p>\n"}, "sslearn.base": {"fullname": "sslearn.base", "modulename": "sslearn.base", "kind": "module", "doc": "<p>Summary of module <code>sslearn.base</code>:</p>\n\n<h2 id=\"functions\">Functions</h2>\n\n<p>get_dataset(X, y):\n    Check and divide dataset between labeled and unlabeled data.</p>\n\n<h2 id=\"classes\">Classes</h2>\n\n<p><a href=\"#FakedProbaClassifier\">FakedProbaClassifier</a>:</p>\n\n<blockquote>\n  <p>Create a classifier that fakes predict_proba method if it does not exist.</p>\n</blockquote>\n\n<p><a href=\"#OneVsRestSSLClassifier\">OneVsRestSSLClassifier</a>:</p>\n\n<blockquote>\n  <p>Adapted OneVsRestClassifier for SSL datasets</p>\n</blockquote>\n"}, "sslearn.base.get_dataset": {"fullname": "sslearn.base.get_dataset", "modulename": "sslearn.base", "qualname": "get_dataset", "kind": "function", "doc": "<p>Check and divide dataset between labeled and unlabeled data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (ndarray or DataFrame of shape (n_samples, n_features)):\nFeatures matrix.</li>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nTarget vector.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X_label</strong> (ndarray or DataFrame of shape (n_label, n_features)):\nLabeled features matrix.</li>\n<li><strong>y_label</strong> (ndarray or Serie of shape (n_label,)):\nLabeled target vector.</li>\n<li><strong>X_unlabel</strong> (ndarray or Serie DataFrame of shape (n_unlabel, n_features)):\nUnlabeled features matrix.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.FakedProbaClassifier": {"fullname": "sslearn.base.FakedProbaClassifier", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier", "kind": "class", "doc": "<p>Fake predict_proba method for classifiers that do not have it. \nWhen predict_proba is called, it will use one hot encoding to fake the probabilities if base_estimator does not have predict_proba method.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.svm</span> <span class=\"kn\">import</span> <span class=\"n\">SVC</span>\n<span class=\"c1\"># SVC does not have predict_proba method</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.base</span> <span class=\"kn\">import</span> <span class=\"n\">FakedProbaClassifier</span>\n<span class=\"n\">faked_svc</span> <span class=\"o\">=</span> <span class=\"n\">FakedProbaClassifier</span><span class=\"p\">(</span><span class=\"n\">SVC</span><span class=\"p\">())</span>\n<span class=\"n\">faked_svc</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">faked_svc</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span> <span class=\"c1\"># One hot encoding probabilities</span>\n</code></pre>\n</div>\n", "bases": "sklearn.base.MetaEstimatorMixin, sklearn.base.ClassifierMixin, sklearn.base.BaseEstimator"}, "sslearn.base.FakedProbaClassifier.__init__": {"fullname": "sslearn.base.FakedProbaClassifier.__init__", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.__init__", "kind": "function", "doc": "<p>Create a classifier that fakes predict_proba method if it does not exist.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin):\nA classifier that implements fit and predict methods.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_estimator</span></span>)</span>"}, "sslearn.base.FakedProbaClassifier.fit": {"fullname": "sslearn.base.FakedProbaClassifier.fit", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.fit", "kind": "function", "doc": "<p>Fit a FakedProbaClassifier.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,)):\nThe target values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (FakedProbaClassifier):\nReturns self.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.FakedProbaClassifier.predict": {"fullname": "sslearn.base.FakedProbaClassifier.predict", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.predict", "kind": "function", "doc": "<p>Predict the classes of X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.FakedProbaClassifier.predict_proba": {"fullname": "sslearn.base.FakedProbaClassifier.predict_proba", "modulename": "sslearn.base", "qualname": "FakedProbaClassifier.predict_proba", "kind": "function", "doc": "<p>Predict the probabilities of each class for X. \nIf the base estimator does not have a predict_proba method, it will be faked using one hot encoding.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples, n_classes)):\nArray with predicted probabilities.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier": {"fullname": "sslearn.base.OneVsRestSSLClassifier", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier", "kind": "class", "doc": "<p>Adapted OneVsRestClassifier for SSL datasets</p>\n\n<p>Prevent use unlabeled data as a independent class in the classifier.</p>\n\n<p>For more information of OvR classifier, see the documentation of <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.multiclass.OneVsRestClassifier.html\">OneVsRestClassifier</a>.</p>\n", "bases": "sklearn.multiclass.OneVsRestClassifier"}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"fullname": "sslearn.base.OneVsRestSSLClassifier.__init__", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.__init__", "kind": "function", "doc": "<p>Adapted OneVsRestClassifier for SSL datasets</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>estimator</strong> ({ClassifierMixin, list},):\nAn estimator object implementing fit and predict_proba or a list of ClassifierMixin</li>\n<li><strong>n_jobs : n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. -1 means using all processors., by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">estimator</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.base.OneVsRestSSLClassifier.fit": {"fullname": "sslearn.base.OneVsRestSSLClassifier.fit", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.fit", "kind": "function", "doc": "<p>Fit underlying estimators.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nData.</li>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,) or (n_samples, n_classes)):\nMulti-class targets. An indicator matrix turns on multilabel\nclassification.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (object):\nInstance of fitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">fit_params</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier.predict": {"fullname": "sslearn.base.OneVsRestSSLClassifier.predict", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.predict", "kind": "function", "doc": "<p>Predict multi-class targets using underlying estimators.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nData.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,) or (n_samples, n_classes)):\nPredicted multi-class targets.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"fullname": "sslearn.base.OneVsRestSSLClassifier.predict_proba", "modulename": "sslearn.base", "qualname": "OneVsRestSSLClassifier.predict_proba", "kind": "function", "doc": "<p>Probability estimates.</p>\n\n<p>The returned estimates for all classes are ordered by label of classes.</p>\n\n<p>Note that in the multilabel case, each sample can have any number of\nlabels. This returns the marginal probability that the given sample has\nthe label in question. For example, it is entirely consistent that two\nlabels both have a 90% probability of applying to a given sample.</p>\n\n<p>In the single label multiclass case, the rows of the returned matrix\nsum to 1.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nInput data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>T</strong> (array-like of shape (n_samples, n_classes)):\nReturns the probability of the sample for each class in the model,\nwhere classes are ordered as they are in <code>self.classes_</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets": {"fullname": "sslearn.datasets", "modulename": "sslearn.datasets", "kind": "module", "doc": "<p>Summary of module <code>sslearn.datasets</code>:</p>\n\n<p>This module contains functions to load and save datasets in different formats.</p>\n\n<h2 id=\"functions\">Functions</h2>\n\n<ol>\n<li>read_csv : Load a dataset from a CSV file.</li>\n<li>read_keel : Load a dataset from a KEEL file.</li>\n<li>secure_dataset : Secure the dataset by converting it into a secure format.</li>\n<li>save_keel : Save a dataset in KEEL format.</li>\n</ol>\n"}, "sslearn.datasets.read_csv": {"fullname": "sslearn.datasets.read_csv", "modulename": "sslearn.datasets", "qualname": "read_csv", "kind": "function", "doc": "<p>Read a .csv file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nFile path</li>\n<li><strong>format</strong> (str, optional):\nObject that will contain the data, it can be <code>numpy</code> or <code>pandas</code>, by default \"pandas\"</li>\n<li><strong>secure</strong> (bool, optional):\nIt guarantees that the dataset has not  <code>-1</code> as valid class, in order to make it semi-supervised after, by default False</li>\n<li><strong>target_col</strong> ({str, int, None}, optional):\nColumn name or index to select class column, if None use the default value stored in the file, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X, y</strong> (array_like):\nDataset loaded.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;pandas&#39;</span>, </span><span class=\"param\"><span class=\"n\">secure</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">target_col</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets.read_keel": {"fullname": "sslearn.datasets.read_keel", "modulename": "sslearn.datasets", "qualname": "read_keel", "kind": "function", "doc": "<p>Read a .dat file from KEEL (<a href=\"http://www.keel.es/\">http://www.keel.es/</a>)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nFile path</li>\n<li><strong>format</strong> (str, optional):\nObject that will contain the data, it can be <code>numpy</code> or <code>pandas</code>, by default \"pandas\"</li>\n<li><strong>secure</strong> (bool, optional):\nIt guarantees that the dataset has not  <code>-1</code> as valid class, in order to make it semi-supervised after, by default False</li>\n<li><strong>target_col</strong> ({str, int, None}, optional):\nColumn name or index to select class column, if None use the default value stored in the file, by default None</li>\n<li><strong>encoding</strong> (str, optional):\nEncoding of file, by default \"utf-8\"</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X, y</strong> (array_like):\nDataset loaded.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span>,</span><span class=\"param\">\t<span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;pandas&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">secure</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">target_col</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf-8&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets.secure_dataset": {"fullname": "sslearn.datasets.secure_dataset", "modulename": "sslearn.datasets", "qualname": "secure_dataset", "kind": "function", "doc": "<p>It guarantees that the dataset has not  <code>-1</code> as valid class, in order to make it semi-supervised after</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (Array-like):\nIgnored</li>\n<li><strong>y</strong> (Array-like):\nTarget array.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X, y</strong> (array_like):\nDataset securized.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.datasets.save_keel": {"fullname": "sslearn.datasets.save_keel", "modulename": "sslearn.datasets", "qualname": "save_keel", "kind": "function", "doc": "<p>Save a dataset in the KEEL format</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like):\nDataset features</li>\n<li><strong>y</strong> (array-like):\nDataset targets</li>\n<li><strong>route</strong> (str):\nPath to save the dataset</li>\n<li><strong>name</strong> (str, optional):\nDataset name, if None the route basename will be selected, by default None</li>\n<li><strong>attribute_name</strong> (list, optional):\nList of attribute names, if None the default names will be used, by default None</li>\n<li><strong>target_name</strong> (str, optional):\nTarget name, by default \"Class\"</li>\n<li><strong>classification</strong> (bool, optional):\nIf the dataset is classification or regression, by default True</li>\n<li><strong>unlabeled</strong> (bool, optional):\nIf the dataset has unlabeled instances, by default True</li>\n<li><strong>force_targets</strong> (collection, optional):\nForce the targets to be a specific value, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">route</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">attribute_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">target_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Class&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">classification</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">unlabeled</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force_targets</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.model_selection": {"fullname": "sslearn.model_selection", "modulename": "sslearn.model_selection", "kind": "module", "doc": "<p>Summary of module <code>sslearn.model_selection</code>:</p>\n\n<p>This module contains functions to split datasets into training and testing sets.</p>\n\n<h2 id=\"functions\">Functions</h2>\n\n<p><a href=\"#artificial_ssl_dataset\">artificial_ssl_dataset</a>:</p>\n\n<blockquote>\n  <p>Generate an artificial semi-supervised learning dataset.</p>\n</blockquote>\n\n<h2 id=\"classes\">Classes</h2>\n\n<p><a href=\"#StratifiedKFoldSS\">StratifiedKFoldSS</a>:</p>\n\n<blockquote>\n  <p>Stratified K-Folds cross-validator for semi-supervised learning.</p>\n</blockquote>\n"}, "sslearn.model_selection.artificial_ssl_dataset": {"fullname": "sslearn.model_selection.artificial_ssl_dataset", "modulename": "sslearn.model_selection", "qualname": "artificial_ssl_dataset", "kind": "function", "doc": "<p>Create an artificial Semi-supervised dataset from a supervised dataset.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTraining data, where n_samples is the number of samples\nand n_features is the number of features.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target variable for supervised learning problems.</li>\n<li><strong>label_rate</strong> (float, optional):\nProportion between labeled instances and unlabel instances, by default 0.1</li>\n<li><strong>random_state</strong> (int or RandomState, optional):\nControls the shuffling applied to the data before applying the split. Pass an int for reproducible output across multiple function calls, by default None</li>\n<li><strong>force_minimum</strong> (int, optional):\nForce a minimum of instances of each class, by default None</li>\n<li><strong>indexes</strong> (bool, optional):\nIf True, return the indexes of the labeled and unlabeled instances, by default False</li>\n<li><strong>shuffle</strong> (bool, default=True):\nWhether or not to shuffle the data before splitting. If shuffle=False then stratify must be None.</li>\n<li><strong>stratify</strong> (array-like, default=None):\nIf not None, data is split in a stratified fashion, using this as the class labels.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>X</strong> (ndarray):\nThe feature set.</li>\n<li><strong>y</strong> (ndarray):\nThe label set, -1 for unlabel instance.</li>\n<li><strong>X_unlabel</strong> (ndarray):\nThe feature set for each y mark as unlabel</li>\n<li><strong>y_unlabel</strong> (ndarray):\nThe true label for each y in the same order.</li>\n<li><strong>label</strong> (ndarray (optional)):\nThe training set indexes for split mark as labeled.</li>\n<li><strong>unlabel</strong> (ndarray (optional)):\nThe training set indexes for split mark as unlabeled.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force_minimum</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.model_selection.StratifiedKFoldSS": {"fullname": "sslearn.model_selection.StratifiedKFoldSS", "modulename": "sslearn.model_selection", "qualname": "StratifiedKFoldSS", "kind": "class", "doc": "<p>Stratified K-Folds cross-validator for semi-supervised learning.</p>\n\n<p>Provides label and unlabel indices for each split. Using the <code>StratifiedKFold</code> method from <code>sklearn</code>.\nThe <code>test</code> set is the labeled set and the <code>train</code> set is the unlabeled set.</p>\n"}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"fullname": "sslearn.model_selection.StratifiedKFoldSS.__init__", "modulename": "sslearn.model_selection", "qualname": "StratifiedKFoldSS.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_splits</strong> (int, default=5):\nNumber of folds. Must be at least 2.</li>\n<li><strong>shuffle</strong> (bool, default=False):\nWhether to shuffle each class's samples before splitting into batches.</li>\n<li><strong>random_state</strong> (int or RandomState instance, default=None):\nWhen shuffle is True, random_state affects the ordering of the indices.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.model_selection.StratifiedKFoldSS.split": {"fullname": "sslearn.model_selection.StratifiedKFoldSS.split", "modulename": "sslearn.model_selection", "qualname": "StratifiedKFoldSS.split", "kind": "function", "doc": "<p>Generate a artificial dataset based on StratifiedKFold method</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTraining data, where n_samples is the number of samples\nand n_features is the number of features.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target variable for supervised learning problems.</li>\n</ul>\n\n<h6 id=\"yields\">Yields</h6>\n\n<ul>\n<li><strong>X</strong> (ndarray):\nThe feature set.</li>\n<li><strong>y</strong> (ndarray):\nThe label set, -1 for unlabel instance.</li>\n<li><strong>label</strong> (ndarray):\nThe training set indices for split mark as labeled.</li>\n<li><strong>unlabel</strong> (ndarray):\nThe training set indices for split mark as unlabeled.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted": {"fullname": "sslearn.restricted", "modulename": "sslearn.restricted", "kind": "module", "doc": "<p>Summary of module <code>sslearn.restricted</code>:</p>\n\n<p>This module contains classes to train a classifier using the restricted set classification approach.</p>\n\n<h2 id=\"classes\">Classes</h2>\n\n<p><a href=\"#WhoIsWhoClassifier\">WhoIsWhoClassifier</a>:</p>\n\n<blockquote>\n  <p>Who is Who Classifier</p>\n</blockquote>\n\n<h2 id=\"functions\">Functions</h2>\n\n<p><a href=\"#conflict_rate\">conflict_rate</a>: </p>\n\n<blockquote>\n  <p>Compute the conflict rate of a prediction, given a set of restrictions.</p>\n</blockquote>\n\n<p><a href=\"#combine_predictions\">combine_predictions</a>: </p>\n\n<blockquote>\n  <p>Combine the predictions of a group of instances to keep the restrictions.</p>\n</blockquote>\n\n<p><a href=\"#feature_fusion\">feature_fusion</a>:</p>\n\n<blockquote>\n  <p>Restricted Set Classification for the instances with pairwise constraints. Combine all instances that have the must-link constraint with the average of their features.</p>\n</blockquote>\n\n<p><a href=\"#probability_fusion\">probability_fusion</a>:</p>\n\n<blockquote>\n  <p>Restricted Set Classification for the instances with pairwise constraints. The class probability for each instance is defined as the mean of the probabilities reported by the classifier according to the must-link constraint.</p>\n</blockquote>\n"}, "sslearn.restricted.conflict_rate": {"fullname": "sslearn.restricted.conflict_rate", "modulename": "sslearn.restricted", "qualname": "conflict_rate", "kind": "function", "doc": "<p>Computes the conflict rate of a prediction, given a set of restrictions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_pred</strong> (array-like of shape (n_samples,)):\nPredicted target values.</li>\n<li><strong>restrictions</strong> (array-like of shape (n_samples,)):\nRestrictions for each sample. If two samples have the same restriction, they cannot have the same y.</li>\n<li><strong>weighted</strong> (bool, default=True):\nWhether to weighted the confusion rate by the number of instances with the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>conflict rate</strong> (float):\nThe conflict rate.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">restrictions</span>, </span><span class=\"param\"><span class=\"n\">weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.combine_predictions": {"fullname": "sslearn.restricted.combine_predictions", "modulename": "sslearn.restricted", "qualname": "combine_predictions", "kind": "function", "doc": "<p>Combine the predictions of a group of instances to keep the restrictions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_probas</strong> (array-like of shape (n_samples, n_classes)):\nThe class probabilities of the input samples.</li>\n<li><strong>instance_group</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group.</li>\n<li><strong>class_number</strong> (int):\nThe number of classes.</li>\n<li><strong>method</strong> (str, optional):\nThe method to use to assing class, it can be <code>greedy</code> to first-look or <code>hungarian</code> to use the Hungarian algorithm, by default \"hungarian\"</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like of shape (n_samples,)</strong>: The predicted labels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_probas</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span>, </span><span class=\"param\"><span class=\"n\">class_number</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;hungarian&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.feature_fusion": {"fullname": "sslearn.restricted.feature_fusion", "modulename": "sslearn.restricted", "qualname": "feature_fusion", "kind": "function", "doc": "<p>Restricted Set Classification for the instances with pairwise constraints. \nCombine all instances that have the must-link constraint with the average of their features.    </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>classifier</strong> (ClassifierMixin with predict_proba method):</p></li>\n<li><p><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</p></li>\n<li><strong>must_link : dict of {int</strong> (list of int}):\nDictionary with the must links, where the key is the instance and the value is a list of instances that must have the same label.</li>\n<li><strong>cannot_link : dict of {int</strong> (list of int}):\nDictionary with the cannot links, where the value is a list of instances that cannot have the same label.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.restricted</span> <span class=\"kn\">import</span> <span class=\"n\">feature_fusion</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.bayes</span> <span class=\"kn\">import</span> <span class=\"n\">GaussianNB</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;dataset.csv&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">must_link</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;must_link.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">(</span><span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;index&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># must_link = {0: [0, 2], 1: [1, 3]} -&gt; </span>\n<span class=\"c1\"># instances 0 and 2 must have the same label, </span>\n<span class=\"c1\"># and instances 1 and 3 must have the same label</span>\n\n<span class=\"n\">cannot_link</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;cannot_link.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">(</span><span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;index&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># cannot_link = {0: [0, 1], 1: [2, 3]} -&gt;</span>\n<span class=\"c1\"># instances 0 and 1 cannot have the same label, </span>\n<span class=\"c1\"># and instances 2 and 3 cannot have the same label</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n<span class=\"n\">X_label</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"o\">!=</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">y_label</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"o\">!=</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">X_unlabel</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n<span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">GaussianNB</span><span class=\"p\">()</span>\n<span class=\"n\">classifier</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_label</span><span class=\"p\">,</span> <span class=\"n\">y_label</span><span class=\"p\">)</span>\n\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">feature_fusion</span><span class=\"p\">(</span><span class=\"n\">classifier</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">must_link</span><span class=\"p\">,</span> <span class=\"n\">cannot_link</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h6 id=\"references\">References</h6>\n\n<p>L.I. Kuncheva, J.L. Garrido-Labrador, I. Ramos-P\u00e9rez, S.L. Hennessey, J.J. Rodr\u00edguez (2024).<br>\nSemi-supervised classification with pairwise constraints: A case study on animal identification from video.<br>\n<i>Information Fusion,</i><br> \n104, 102188, <a href=\"https://doi.org/10.1016/j.inffus.2023.102188\">10.1016/j.inffus.2023.102188</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">classifier</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">must_link</span>, </span><span class=\"param\"><span class=\"n\">cannot_link</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.probability_fusion": {"fullname": "sslearn.restricted.probability_fusion", "modulename": "sslearn.restricted", "qualname": "probability_fusion", "kind": "function", "doc": "<p>Restricted Set Classification for the instances with pairwise constraints. \nThe class probability for each instance is defined as the mean of the probabilities reported by the classifier according to the must-link constraint.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>classifier</strong> (ClassifierMixin with predict_proba method):</p></li>\n<li><p><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</p></li>\n<li><strong>must_link : dict of {int</strong> (list of int}):\nDictionary with the must links, where the key is the instance and the value is a list of instances that must have the same label.</li>\n<li><strong>cannot_link : dict of {int</strong> (list of int}):\nDictionary with the cannot links, where the value is a list of instances that cannot have the same label.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sslearn.restricted</span> <span class=\"kn\">import</span> <span class=\"n\">feature_fusion</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.bayes</span> <span class=\"kn\">import</span> <span class=\"n\">GaussianNB</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;dataset.csv&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">must_link</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;must_link.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">(</span><span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;index&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># must_link = {0: [0, 2], 1: [1, 3]} -&gt; </span>\n<span class=\"c1\"># instances 0 and 2 must have the same label, </span>\n<span class=\"c1\"># and instances 1 and 3 must have the same label</span>\n\n<span class=\"n\">cannot_link</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;cannot_link.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">(</span><span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"s1\">&#39;index&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># cannot_link = {0: [0, 1], 1: [2, 3]} -&gt;</span>\n<span class=\"c1\"># instances 0 and 1 cannot have the same label, </span>\n<span class=\"c1\"># and instances 2 and 3 cannot have the same label</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span>\n<span class=\"n\">X_label</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"o\">!=</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">y_label</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"o\">!=</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">X_unlabel</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n<span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">GaussianNB</span><span class=\"p\">()</span>\n<span class=\"n\">classifier</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_label</span><span class=\"p\">,</span> <span class=\"n\">y_label</span><span class=\"p\">)</span>\n\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">probability_fusion</span><span class=\"p\">(</span><span class=\"n\">classifier</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">must_link</span><span class=\"p\">,</span> <span class=\"n\">cannot_link</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h6 id=\"references\">References</h6>\n\n<p>L.I. Kuncheva, J.L. Garrido-Labrador, I. Ramos-P\u00e9rez, S.L. Hennessey, J.J. Rodr\u00edguez (2024).<br>\nSemi-supervised classification with pairwise constraints: A case study on animal identification from video.<br>\n<i>Information Fusion,</i><br> \n104, 102188, <a href=\"https://doi.org/10.1016/j.inffus.2023.102188\">10.1016/j.inffus.2023.102188</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">classifier</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">must_link</span>, </span><span class=\"param\"><span class=\"n\">cannot_link</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier": {"fullname": "sslearn.restricted.WhoIsWhoClassifier", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier", "kind": "class", "doc": "<p>Base class for all estimators in scikit-learn.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>All estimators should specify all the parameters that can be set\nat the class level in their <code>__init__</code> as explicit keyword\narguments (no <code>*args</code> or <code>**kwargs</code>).</p>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.ClassifierMixin, sklearn.base.MetaEstimatorMixin"}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.__init__", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.__init__", "kind": "function", "doc": "<p>Who is Who Classifier\nKuncheva, L. I., Rodriguez, J. J., &amp; Jackson, A. S. (2017).\nRestricted set classification: Who is there?. <i>Pattern Recognition</i>, 63, 158-170.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin):\nThe base estimator to be used for training.</li>\n<li><strong>method</strong> (str, optional):\nThe method to use to assing class, it can be <code>greedy</code> to first-look or <code>hungarian</code> to use the Hungarian algorithm, by default \"hungarian\"</li>\n<li><strong>conflict_weighted</strong> (bool, default=True):\nWhether to weighted the confusion rate by the number of instances with the same group.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_estimator</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;hungarian&#39;</span>, </span><span class=\"param\"><span class=\"n\">conflict_weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.fit", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.fit", "kind": "function", "doc": "<p>Fit the model according to the given training data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values.</li>\n<li><strong>instance_group</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group. If None, group restriction will not be used in training.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (object):\nReturns self.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.conflict_rate", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.conflict_rate", "kind": "function", "doc": "<p>Calculate the conflict rate of the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>instance_group</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The conflict rate.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.predict", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.predict", "kind": "function", "doc": "<p>Predict class for X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>**kwards</strong> (array-like of shape (n_samples)):\nThe group. Two instances with the same label are not allowed to be in the same group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like of shape (n_samples, n_classes)</strong>: The class probabilities of the input samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">instance_group</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"fullname": "sslearn.restricted.WhoIsWhoClassifier.predict_proba", "modulename": "sslearn.restricted", "qualname": "WhoIsWhoClassifier.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities for X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array-like of shape (n_samples, n_classes)</strong>: The class probabilities of the input samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.subview": {"fullname": "sslearn.subview", "modulename": "sslearn.subview", "kind": "module", "doc": "<p>Summary of module <code>sslearn.subview</code>:</p>\n\n<p>This module contains classes to train a classifier or a regressor selecting a sub-view of the data.</p>\n\n<h2 id=\"classes\">Classes</h2>\n\n<p><a href=\"#SubViewClassifier\">SubViewClassifier</a>:</p>\n\n<blockquote>\n  <p>Train a sub-view classifier.\n  <a href=\"#SubViewRegressor\">SubViewRegressor</a>:\n  Train a sub-view regressor.</p>\n</blockquote>\n"}, "sslearn.subview.SubViewClassifier": {"fullname": "sslearn.subview.SubViewClassifier", "modulename": "sslearn.subview", "qualname": "SubViewClassifier", "kind": "class", "doc": "<p>A classifier that uses a subview of the data.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.subview</span> <span class=\"kn\">import</span> <span class=\"n\">SubViewClassifier</span>\n\n<span class=\"c1\"># Mode &#39;include&#39; will include all columns that contain `string`</span>\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"s2\">&quot;sepal&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;include&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Mode &#39;regex&#39; will include all columns that match the regex</span>\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"s2\">&quot;sepal.*&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;regex&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Mode &#39;index&#39; will include the columns at the index, useful for numpy arrays</span>\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;index&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "bases": "sslearn.subview._subview.SubView, sklearn.base.ClassifierMixin"}, "sslearn.subview.SubViewClassifier.predict_proba": {"fullname": "sslearn.subview.SubViewClassifier.predict_proba", "modulename": "sslearn.subview", "qualname": "SubViewClassifier.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities using the base estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>p</strong> (array-like of shape (n_samples, n_classes)):\nThe class probabilities of the input samples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.subview.SubViewRegressor": {"fullname": "sslearn.subview.SubViewRegressor", "modulename": "sslearn.subview", "qualname": "SubViewRegressor", "kind": "class", "doc": "<p>A classifier that uses a subview of the data.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.subview</span> <span class=\"kn\">import</span> <span class=\"n\">SubViewClassifier</span>\n\n<span class=\"c1\"># Mode &#39;include&#39; will include all columns that contain `string`</span>\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"s2\">&quot;sepal&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;include&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Mode &#39;regex&#39; will include all columns that match the regex</span>\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"s2\">&quot;sepal.*&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;regex&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Mode &#39;index&#39; will include the columns at the index, useful for numpy arrays</span>\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SubViewClassifier</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;index&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "bases": "sslearn.subview._subview.SubView, sklearn.base.RegressorMixin"}, "sslearn.subview.SubViewRegressor.predict": {"fullname": "sslearn.subview.SubViewRegressor.predict", "modulename": "sslearn.subview", "qualname": "SubViewRegressor.predict", "kind": "function", "doc": "<p>Predict using the base estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe predicted values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils": {"fullname": "sslearn.utils", "modulename": "sslearn.utils", "kind": "module", "doc": "<p>Some utility functions</p>\n\n<p>This module contains utility functions that are used in different parts of the library.</p>\n\n<h2 id=\"functions\">Functions</h2>\n\n<p><a href=\"#safe_division\">safe_division</a>:</p>\n\n<blockquote>\n  <p>Safely divide two numbers preventing division by zero.\n  <a href=\"#confidence_interval\">confidence_interval</a>:\n  Calculate the confidence interval of the predictions.\n  <a href=\"#choice_with_proportion\">choice_with_proportion</a>: \n  Choice the best predictions according to the proportion of each class.\n  <a href=\"#calculate_prior_probability\">calculate_prior_probability</a>:\n  Calculate the priori probability of each label.\n  <a href=\"#mode\">mode</a>:\n  Calculate the mode of a list of values.\n  <a href=\"#check_n_jobs\">check_n_jobs</a>:\n  Check <code>n_jobs</code> parameter according to the scikit-learn convention.\n  <a href=\"#check_classifier\">check_classifier</a>:\n  Check if the classifier is a ClassifierMixin or a list of ClassifierMixin.</p>\n</blockquote>\n"}, "sslearn.utils.safe_division": {"fullname": "sslearn.utils.safe_division", "modulename": "sslearn.utils", "qualname": "safe_division", "kind": "function", "doc": "<p>Safely divide two numbers preventing division by zero</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dividend</strong> (numeric):\nDividend value</li>\n<li><strong>divisor</strong> (numeric):\nDivisor value</li>\n<li><strong>epsilon</strong> (numeric):\nClose to zero value to be used in case of division by zero</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>result</strong> (numeric):\nResult of the division</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dividend</span>, </span><span class=\"param\"><span class=\"n\">divisor</span>, </span><span class=\"param\"><span class=\"n\">epsilon</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.confidence_interval": {"fullname": "sslearn.utils.confidence_interval", "modulename": "sslearn.utils", "qualname": "confidence_interval", "kind": "function", "doc": "<p>Calculate the confidence interval of the predictions</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n<li><strong>hyp</strong> (classifier):\nThe classifier to be used for prediction</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values</li>\n<li><strong>alpha</strong> (float, optional):\nconfidence (1 - significance), by default .95</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>li, hi</strong> (float):\nlower and upper bound of the confidence interval</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">hyp</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.95</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.choice_with_proportion": {"fullname": "sslearn.utils.choice_with_proportion", "modulename": "sslearn.utils", "qualname": "choice_with_proportion", "kind": "function", "doc": "<p>Choice the best predictions according to the proportion of each class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>predictions</strong> (array-like of shape (n_samples,)):\narray of predictions</li>\n<li><strong>class_predicted</strong> (array-like of shape (n_samples,)):\narray of predicted classes</li>\n<li><strong>proportion</strong> (dict):\ndictionary with the proportion of each class</li>\n<li><strong>extra</strong> (int, optional):\nnumber of extra instances to be added, by default 0</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>indices</strong> (array-like of shape (n_samples,)):\narray of indices of the best predictions</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">predictions</span>, </span><span class=\"param\"><span class=\"n\">class_predicted</span>, </span><span class=\"param\"><span class=\"n\">proportion</span>, </span><span class=\"param\"><span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.calculate_prior_probability": {"fullname": "sslearn.utils.calculate_prior_probability", "modulename": "sslearn.utils", "qualname": "calculate_prior_probability", "kind": "function", "doc": "<p>Calculate the priori probability of each label</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\narray of labels</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>class_probability</strong> (dict):\ndictionary with priori probability (value) of each label (key)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.mode": {"fullname": "sslearn.utils.mode", "modulename": "sslearn.utils", "qualname": "mode", "kind": "function", "doc": "<p>Calculate the mode of a list of values</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples, n_estimators)):\narray of values</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>mode</strong> (array-like of shape (n_samples,)):\narray of mode of each label</li>\n<li><strong>count</strong> (array-like of shape (n_samples,)):\narray of count of the mode of each label</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.utils.check_n_jobs": {"fullname": "sslearn.utils.check_n_jobs", "modulename": "sslearn.utils", "qualname": "check_n_jobs", "kind": "function", "doc": "<p>Check <code>n_jobs</code> parameter according to the scikit-learn convention.\nFrom sktime: BSD 3-Clause</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_jobs</strong> (int, positive or -1):\nThe number of jobs for parallelization.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>n_jobs</strong> (int):\nChecked number of jobs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_jobs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper": {"fullname": "sslearn.wrapper", "modulename": "sslearn.wrapper", "kind": "module", "doc": "<p>Summary of module <code>sslearn.wrapper</code>:</p>\n\n<p>This module contains classes to train semi-supervised learning algorithms using a wrapper approach.</p>\n\n<h2 id=\"self-training-algorithms\">Self-Training Algorithms</h2>\n\n<ul>\n<li><a href=\"#SelfTraining\">SelfTraining</a>: \nSelf-training algorithm.</li>\n<li><a href=\"#Setred\">Setred</a>:\nSelf-training with redundancy reduction.</li>\n</ul>\n\n<h2 id=\"co-training-algorithms\">Co-Training Algorithms</h2>\n\n<ul>\n<li><a href=\"#CoTraining\">CoTraining</a>:\nCo-training</li>\n<li><a href=\"#CoTrainingByCommittee\">CoTrainingByCommittee</a>:\nCo-training by committee</li>\n<li><a href=\"#DemocraticCoLearning\">DemocraticCoLearning</a>:\nDemocratic co-learning</li>\n<li><a href=\"#Rasco\">Rasco</a>:\nRandom subspace co-training</li>\n<li><a href=\"#RelRasco\">RelRasco</a>:\nRelevant random subspace co-training</li>\n<li><a href=\"#CoForest\">CoForest</a>:\nCo-Forest</li>\n<li><a href=\"#TriTraining\">TriTraining</a>:\nTri-training</li>\n<li><a href=\"#DeTriTraining\">DeTriTraining</a>:\nData Editing Tri-training</li>\n</ul>\n"}, "sslearn.wrapper.SelfTraining": {"fullname": "sslearn.wrapper.SelfTraining", "modulename": "sslearn.wrapper", "qualname": "SelfTraining", "kind": "class", "doc": "<h2 id=\"self-training-classifier-with-data-loader-compatible\"><strong>Self Training Classifier with data loader compatible.</strong></h2>\n\n<p>Is the same <code>SelfTrainingClassifier</code> from sklearn but with <code>sslearn</code> data loader compatible.\nFor more information, see the <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.semi_supervised.SelfTrainingClassifier.html\">sklearn documentation</a>.</p>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">SelfTraining</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">SelfTraining</span><span class=\"p\">()</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>David Yarowsky. (1995). <br>\nUnsupervised word sense disambiguation rivaling supervised methods.<br>\nIn <i>Proceedings of the 33rd annual meeting on Association for Computational Linguistics (ACL '95).</i><br>\nAssociation for Computational Linguistics,<br>\nStroudsburg, PA, USA, 189-196. <br>\n<a href=\"https://doi.org/10.3115/981658.981684\">10.3115/981658.981684</a></p>\n", "bases": "sklearn.semi_supervised._self_training.SelfTrainingClassifier"}, "sslearn.wrapper.SelfTraining.__init__": {"fullname": "sslearn.wrapper.SelfTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "SelfTraining.__init__", "kind": "function", "doc": "<p>Self-training. Adaptation of SelfTrainingClassifier from sklearn with data loader compatible.</p>\n\n<p>This class allows a given supervised classifier to function as a\nsemi-supervised classifier, allowing it to learn from unlabeled data. It\ndoes this by iteratively predicting pseudo-labels for the unlabeled data\nand adding them to the training set.</p>\n\n<p>The classifier will continue iterating until either max_iter is reached, or\nno pseudo-labels were added to the training set in the previous iteration.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (estimator object):\nAn estimator object implementing <code>fit</code> and <code>predict_proba</code>.\nInvoking the <code>fit</code> method will fit a clone of the passed estimator,\nwhich will be stored in the <code>base_estimator_</code> attribute.</li>\n<li><strong>threshold</strong> (float, default=0.75):\nThe decision threshold for use with <code>criterion='threshold'</code>.\nShould be in [0, 1). When using the 'threshold' criterion, a\n:ref:<code>well calibrated classifier &lt;calibration&gt;</code> should be used.</li>\n<li><strong>criterion</strong> ({'threshold', 'k_best'}, default='threshold'):\nThe selection criterion used to select which labels to add to the\ntraining set. If 'threshold', pseudo-labels with prediction\nprobabilities above <code>threshold</code> are added to the dataset. If 'k_best',\nthe <code>k_best</code> pseudo-labels with highest prediction probabilities are\nadded to the dataset. When using the 'threshold' criterion, a\n:ref:<code>well calibrated classifier &lt;calibration&gt;</code> should be used.</li>\n<li><strong>k_best</strong> (int, default=10):\nThe amount of samples to add in each iteration. Only used when\n<code>criterion</code> is k_best'.</li>\n<li><strong>max_iter</strong> (int or None, default=10):\nMaximum number of iterations allowed. Should be greater than or equal\nto 0. If it is <code>None</code>, the classifier will continue to predict labels\nuntil no new pseudo-labels are added, or all unlabeled samples have\nbeen labeled.</li>\n<li><strong>verbose</strong> (bool, default=False):\nEnable verbose output.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.75</span>,</span><span class=\"param\">\t<span class=\"n\">criterion</span><span class=\"o\">=</span><span class=\"s1\">&#39;threshold&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">k_best</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "sslearn.wrapper.SelfTraining.fit": {"fullname": "sslearn.wrapper.SelfTraining.fit", "modulename": "sslearn.wrapper", "qualname": "SelfTraining.fit", "kind": "function", "doc": "<p>Fits this <code>SelfTrainingClassifier</code> to a dataset.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>y</strong> ({array-like, sparse matrix} of shape (n_samples,)):\nArray representing the labels. Unlabeled samples should have the\nlabel -1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (SelfTrainingClassifier):\nReturns an instance of self.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred": {"fullname": "sslearn.wrapper.Setred", "modulename": "sslearn.wrapper", "qualname": "Setred", "kind": "class", "doc": "<h2 id=\"self-training-with-editing\"><strong>Self-training with Editing.</strong></h2>\n\n<p>Create a SETRED classifier. It is a self-training algorithm that uses a rejection mechanism to avoid adding noisy samples to the training set.\nThe main process are:</p>\n\n<ol>\n<li>Train a classifier with the labeled data.</li>\n<li>Create a pool of unlabeled data and select the most confident predictions.</li>\n<li>Repeat until the maximum number of iterations is reached:\na. Select the most confident predictions from the unlabeled data.\nb. Calculate the neighborhood graph of the labeled data and the selected instances from the unlabeled data.\nc. Calculate the significance level of the selected instances.\nd. Reject the instances that are not significant according their position in the neighborhood graph.\ne. Add the selected instances to the labeled data and retrains the classifier.\nf. Add new instances to the pool of unlabeled data.</li>\n<li>Return the classifier trained with the labeled data.</li>\n</ol>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">Setred</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">Setred</span><span class=\"p\">()</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Li, Ming, and Zhi-Hua Zhou. (2005)<br>\nSETRED: Self-training with editing,<br>\nin <i>Advances in Knowledge Discovery and Data Mining.</i> <br>\nPacific-Asia Conference on Knowledge Discovery and Data Mining <br>\nLNAI 3518, Springer, Berlin, Heidelberg, <br>\n<a href=\"https://doi.org/10.1007/11430919_71\">10.1007/11430919_71</a></p>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.MetaEstimatorMixin"}, "sslearn.wrapper.Setred.__init__": {"fullname": "sslearn.wrapper.Setred.__init__", "modulename": "sslearn.wrapper", "qualname": "Setred.__init__", "kind": "function", "doc": "<p>Create a SETRED classifier.\nIt is a self-training algorithm that uses a rejection mechanism to avoid adding noisy samples to the training set.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default KNeighborsClassifier(n_neighbors=3)</li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations allowed. Should be greater than or equal to 0., by default 40</li>\n<li><strong>distance</strong> (str, optional):\nThe distance metric to use for the graph.\nThe default metric is euclidean, and with p=2 is equivalent to the standard Euclidean metric.\nFor a list of available metrics, see the documentation of DistanceMetric and the metrics listed in sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS.\nNote that the <code>cosine</code> metric uses cosine_distances., by default <code>euclidean</code></li>\n<li><strong>poolsize</strong> (float, optional):\nMax number of unlabel instances candidates to pseudolabel, by default 0.25</li>\n<li><strong>rejection_threshold</strong> (float, optional):\nsignificance level, by default 0.05</li>\n<li><strong>graph_neighbors</strong> (int, optional):\nNumber of neighbors for each sample., by default 1</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of parallel jobs to run for neighbors search. None means 1 unless in a joblib.parallel_backend context. -1 means using all processors, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">KNeighborsClassifier</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"o\">=</span><span class=\"s1\">&#39;euclidean&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mf\">0.25</span>,</span><span class=\"param\">\t<span class=\"n\">rejection_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">graph_neighbors</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.Setred.fit": {"fullname": "sslearn.wrapper.Setred.fit", "modulename": "sslearn.wrapper", "qualname": "Setred.fit", "kind": "function", "doc": "<p>Build a Setred classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (Setred):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred.predict": {"fullname": "sslearn.wrapper.Setred.predict", "modulename": "sslearn.wrapper", "qualname": "Setred.predict", "kind": "function", "doc": "<p>Predict class value for X.\nFor a classification model, the predicted class for each sample in X is returned.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred.predict_proba": {"fullname": "sslearn.wrapper.Setred.predict_proba", "modulename": "sslearn.wrapper", "qualname": "Setred.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities of the input samples X.\nThe predicted class probability depends on the ensemble estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples, n_classes) or list of n_outputs such arrays if n_outputs &gt; 1):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Setred.score": {"fullname": "sslearn.wrapper.Setred.score", "modulename": "sslearn.wrapper", "qualname": "Setred.score", "kind": "function", "doc": "<p>Return the mean accuracy on the given test data and labels.</p>\n\n<p>In multi-label classification, this is the subset accuracy\nwhich is a harsh metric since you require for each sample that\neach label set be correctly predicted.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTest samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,) or (n_samples, n_outputs)):\nTrue labels for <code>X</code>.</li>\n<li><strong>sample_weight</strong> (array-like of shape (n_samples,), default=None):\nSample weights.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>score</strong> (float):\nMean accuracy of <code>self.predict(X)</code> w.r.t. <code>y</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining": {"fullname": "sslearn.wrapper.CoTraining", "modulename": "sslearn.wrapper", "qualname": "CoTraining", "kind": "class", "doc": "<h2 id=\"cotraining-classifier-multi-view-learning-algorithm-that-uses-two-classifiers-to-label-instances\"><strong>CoTraining classifier. Multi-view learning algorithm that uses two classifiers to label instances.</strong></h2>\n\n<p>The main process is:</p>\n\n<ol>\n<li>Train each classifier with the labeled instances and their respective view.</li>\n<li>While max iterations is not reached or any instance is unlabeled:\n<ol>\n<li>Predict the instances from the unlabeled set.</li>\n<li>Select the instances that have the same prediction and the predictions are above the threshold.</li>\n<li>Label the instances with the highest probability, keeping the balance of the classes.</li>\n<li>Retrain the classifier with the new instances.</li>\n</ol></li>\n<li>Combine the probabilities of each classifier.</li>\n</ol>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CoTraining</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cotraining</span> <span class=\"o\">=</span> <span class=\"n\">CoTraining</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">())</span>\n<span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[:,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n<span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[:,</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]]</span>\n<span class=\"n\">cotraining</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X2</span><span class=\"p\">)</span> \n<span class=\"c1\"># or</span>\n<span class=\"n\">cotraining</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">features</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">cotraining</span> <span class=\"o\">=</span> <span class=\"n\">CoTraining</span><span class=\"p\">(</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"n\">force_second_view</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">cotraining</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Avrim Blum and Tom Mitchell. (1998).<br>\nCombining labeled and unlabeled data with co-training<br>\nin <i>Proceedings of the eleventh annual conference on Computational learning theory (COLT' 98)</i>.<br>\nAssociation for Computing Machinery, New York, NY, USA, 92-100.<br>\n<a href=\"https://doi.org/10.1145/279943.279962\">10.1145/279943.279962</a></p>\n\n<p>Han, Xian-Hua, Yen-wei Chen, and Xiang Ruan. (2011). <br>\nMulti-Class Co-Training Learning for Object and Scene Recognition,<br>\npp. 67-70 in. Nara, Japan. <br>\n<a href=\"http://www.mva-org.jp/Proceedings/2011CD/papers/04-08.pdf\">http://www.mva-org.jp/Proceedings/2011CD/papers/04-08.pdf</a><br></p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.CoTraining.__init__": {"fullname": "sslearn.wrapper.CoTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "CoTraining.__init__", "kind": "function", "doc": "<p>Create a CoTraining classifier. \nMulti-view learning algorithm that uses two classifiers to label instances.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nThe classifier that will be used in the cotraining algorithm on the feature set, by default DecisionTreeClassifier()</li>\n<li><strong>second_base_estimator</strong> (ClassifierMixin, optional):\nThe classifier that will be used in the cotraining algorithm on another feature set, if none are a clone of base_estimator, by default None</li>\n<li><strong>max_iterations</strong> (int, optional):\nThe number of iterations, by default 30</li>\n<li><strong>poolsize</strong> (int, optional):\nThe size of the pool of unlabeled samples from which the classifier can choose, by default 75</li>\n<li><strong>threshold</strong> (float, optional):\nThe threshold for label instances, by default 0.5</li>\n<li><strong>force_second_view</strong> (bool, optional):\nThe second classifier needs a different view of the data. If False then a second view will be same as the first, by default True</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">second_base_estimator</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mi\">75</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">force_second_view</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.CoTraining.fit": {"fullname": "sslearn.wrapper.CoTraining.fit", "modulename": "sslearn.wrapper", "qualname": "CoTraining.fit", "kind": "function", "doc": "<p>Build a CoTraining classifier from the training set.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, not compatible with <code>features</code>, by default None</li>\n<li><strong>features</strong> ({list, tuple}, optional):\nlist or tuple of two arrays with <code>feature</code> index for each subspace view, not compatible with <code>X2</code>, by default None</li>\n<li><strong>number_per_class</strong> ({dict}, optional):\ndict of class name:integer with the max ammount of instances to label in this class in each iteration, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (CoTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">features</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">number_per_class</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.predict_proba": {"fullname": "sslearn.wrapper.CoTraining.predict_proba", "modulename": "sslearn.wrapper", "qualname": "CoTraining.predict_proba", "kind": "function", "doc": "<p>Predict probability for each possible outcome.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>class probabilities</strong> (ndarray of shape (n_samples, n_classes)):\nArray with prediction probabilities.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.predict": {"fullname": "sslearn.wrapper.CoTraining.predict", "modulename": "sslearn.wrapper", "qualname": "CoTraining.predict", "kind": "function", "doc": "<p>Predict the classes of X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples,)):\nArray with predicted labels.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">X2</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTraining.score": {"fullname": "sslearn.wrapper.CoTraining.score", "modulename": "sslearn.wrapper", "qualname": "CoTraining.score", "kind": "function", "doc": "<p>Return the mean accuracy on the given test data and labels.\nIn multi-label classification, this is the subset accuracy\nwhich is a harsh metric since you require for each sample that\neach label set be correctly predicted.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTest samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,) or (n_samples, n_outputs)):\nTrue labels for <code>X</code>.</li>\n<li><strong>sample_weight</strong> (array-like of shape (n_samples,), default=None):\nSample weights.</li>\n<li><strong>X2</strong> ({array-like, sparse matrix} of shape (n_samples, n_features), optional):\nArray representing the data from another view, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>score</strong> (float):\nMean accuracy of <code>self.predict(X)</code> wrt. <code>y</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee": {"fullname": "sslearn.wrapper.CoTrainingByCommittee", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee", "kind": "class", "doc": "<h2 id=\"co-training-by-committee-classifier\"><strong>Co-Training by Committee classifier.</strong></h2>\n\n<p>Create a committee trained by co-training based on the diversity of the classifiers</p>\n\n<p>The main process is:</p>\n\n<ol>\n<li>Train a committee of classifiers.</li>\n<li>Create a pool of unlabeled instances.</li>\n<li>While max iterations is not reached or any instance is unlabeled:\n<ol>\n<li>Predict the instances from the unlabeled set.</li>\n<li>Select the instances with the highest probability.</li>\n<li>Label the instances with the highest probability, keeping the balance of the classes but ensuring that at least n instances of each class are added.</li>\n<li>Retrain the classifier with the new instances.</li>\n</ol></li>\n<li>Combine the probabilities of each classifier.</li>\n</ol>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CoTrainingByCommittee</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cotraining</span> <span class=\"o\">=</span> <span class=\"n\">CoTrainingByCommittee</span><span class=\"p\">()</span>\n<span class=\"n\">cotraining</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">cotraining</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>M. F. A. Hady and F. Schwenker,<br>\nCo-training by Committee: A New Semi-supervised Learning Framework,<br>\nin <i>2008 IEEE International Conference on Data Mining Workshops</i>,<br>\nPisa, 2008, pp. 563-572,  <a href=\"https://doi.org/10.1109/ICDMW.2008.27\">10.1109/ICDMW.2008.27</a></p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.__init__", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.__init__", "kind": "function", "doc": "<p>Create a committee trained by cotraining based on\nthe diversity of classifiers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ensemble_estimator</strong> (ClassifierMixin, optional):\nensemble method, works without a ensemble as\nself training with pool, by default BaggingClassifier().</li>\n<li><strong>max_iterations</strong> (int, optional):\nnumber of iterations of training, -1 if no max iterations, by default 100</li>\n<li><strong>poolsize</strong> (int, optional):\nmax number of unlabeled instances candidates to pseudolabel, by default 100</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ensemble_estimator</span><span class=\"o\">=</span><span class=\"n\">BaggingClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">min_instances_for_class</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.fit", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.fit", "kind": "function", "doc": "<p>Build a CoTrainingByCommittee classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (CoTrainingByCommittee):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.predict", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.predict", "kind": "function", "doc": "<p>Predict class value for X.\nFor a classification model, the predicted class for each sample in X is returned.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.predict_proba", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities of the input samples X.\nThe predicted class probability depends on the ensemble estimator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe input samples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y</strong> (ndarray of shape (n_samples, n_classes) or list of n_outputs such arrays if n_outputs &gt; 1):\nThe predicted classes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.CoTrainingByCommittee.score": {"fullname": "sslearn.wrapper.CoTrainingByCommittee.score", "modulename": "sslearn.wrapper", "qualname": "CoTrainingByCommittee.score", "kind": "function", "doc": "<p>Return the mean accuracy on the given test data and labels.\nIn multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like of shape (n_samples, n_features)):\nTest samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,) or (n_samples, n_outputs)):\nTrue labels for X.</li>\n<li><strong>sample_weight</strong> (array-like of shape (n_samples,), optional):\nSample weights., by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>score</strong> (float):\nMean accuracy of self.predict(X) wrt. y.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DemocraticCoLearning": {"fullname": "sslearn.wrapper.DemocraticCoLearning", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning", "kind": "class", "doc": "<h2 id=\"democratic-co-learning-ensemble-of-classifiers-of-different-types\"><strong>Democratic Co-learning. Ensemble of classifiers of different types.</strong></h2>\n\n<p>A iterative algorithm that uses a ensemble of classifiers to label instances.\nThe main process is:</p>\n\n<ol>\n<li>Train each classifier with the labeled instances.</li>\n<li>While any classifier is retrained:\n<ol>\n<li>Predict the instances from the unlabeled set.</li>\n<li>Calculate the confidence interval for each classifier for define weights.</li>\n<li>Calculate the weighted vote for each instance.</li>\n<li>Calculate the majority vote for each instance.</li>\n<li>Select the instances to label if majority vote is the same as weighted vote.</li>\n<li>Select the instances to retrain the classifier, if <code>only_mislabeled</code> is False then select all instances, else select only mislabeled instances for each classifier.</li>\n<li>Retrain the classifier with the new instances if the error rate is lower than the previous iteration.</li>\n</ol></li>\n<li>Ignore the classifiers with confidence interval lower than 0.5.</li>\n<li>Combine the probabilities of each classifier.</li>\n</ol>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.tree</span> <span class=\"kn\">import</span> <span class=\"n\">DecisionTreeClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.naive_bayes</span> <span class=\"kn\">import</span> <span class=\"n\">GaussianNB</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.neighbors</span> <span class=\"kn\">import</span> <span class=\"n\">KNeighborsClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">DemocraticCoLearning</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">dcl</span> <span class=\"o\">=</span> <span class=\"n\">DemocraticCoLearning</span><span class=\"p\">(</span><span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"n\">GaussianNB</span><span class=\"p\">(),</span> <span class=\"n\">KNeighborsClassifier</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)])</span>\n<span class=\"n\">dcl</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">dcl</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Y. Zhou and S. Goldman, (2004) <br>\nDemocratic co-learning, <br>\nin <i>16th IEEE International Conference on Tools with Artificial Intelligence</i>,<br>\npp. 594-602, <a href=\"https://doi.org/10.1109/ICTAI.2004.48\">10.1109/ICTAI.2004.48</a>.</p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"fullname": "sslearn.wrapper.DemocraticCoLearning.__init__", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.__init__", "kind": "function", "doc": "<p>Democratic Co-learning. Ensemble of classifiers of different types.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> ({ClassifierMixin, list}, optional):\nAn estimator object implementing fit and predict_proba or a list of ClassifierMixin, by default DecisionTreeClassifier()</li>\n<li><strong>n_estimators</strong> (int, optional):\nnumber of base_estimators to use. None if base_estimator is a list, by default None</li>\n<li><strong>expand_only_mislabeled</strong> (bool, optional):\nexpand only mislabeled instances by itself, by default True</li>\n<li><strong>alpha</strong> (float, optional):\nconfidence level, by default 0.95</li>\n<li><strong>q_exp</strong> (int, optional):\nexponent for the estimation for error rate, by default 2</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>AttributeError</strong>: If n_estimators is None and base_estimator is not a list</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">(),</span> <span class=\"n\">GaussianNB</span><span class=\"p\">(),</span> <span class=\"n\">KNeighborsClassifier</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)]</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">expand_only_mislabeled</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.95</span>,</span><span class=\"param\">\t<span class=\"n\">q_exp</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.DemocraticCoLearning.fit": {"fullname": "sslearn.wrapper.DemocraticCoLearning.fit", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.fit", "kind": "function", "doc": "<p>Fit Democratic-Co classifier</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n<li><strong>estimator_kwards</strong> ({list, dict}, optional):\nlist of kwards for each estimator or kwards for all estimators, by default None</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (DemocraticCoLearning):\nfitted classifier</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">estimator_kwards</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"fullname": "sslearn.wrapper.DemocraticCoLearning.predict_proba", "modulename": "sslearn.wrapper", "qualname": "DemocraticCoLearning.predict_proba", "kind": "function", "doc": "<p>Predict probability for each possible outcome.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nArray representing the data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>class probabilities</strong> (ndarray of shape (n_samples, n_classes)):\nArray with prediction probabilities.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.Rasco": {"fullname": "sslearn.wrapper.Rasco", "modulename": "sslearn.wrapper", "qualname": "Rasco", "kind": "class", "doc": "<h2 id=\"co-training-based-on-random-subspaces\"><strong>Co-Training based on random subspaces</strong></h2>\n\n<p>Generate a set of random subspaces and train a classifier for each subspace.</p>\n\n<p>The main process is:</p>\n\n<ol>\n<li>Generate a set of random subspaces.</li>\n<li>Train a classifier for each subspace.</li>\n<li>While max iterations is not reached or any instance is unlabeled:\n<ol>\n<li>Predict the instances from the unlabeled set for each classifier.</li>\n<li>Calculate the average of the predictions.</li>\n<li>Select the instances with the highest probability.</li>\n<li>Label the instances with the highest probability, keeping the balance of the classes.</li>\n<li>Retrain the classifier with the new instances.</li>\n</ol></li>\n<li>Combine the probabilities of each classifier.</li>\n</ol>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">Rasco</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">rasco</span> <span class=\"o\">=</span> <span class=\"n\">Rasco</span><span class=\"p\">()</span>\n<span class=\"n\">rasco</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">rasco</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span> \n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Wang, J., Luo, S. W., &amp; Zeng, X. H. (2008).<br>\nA random subspace method for co-training,<br>\nin <i>2008 IEEE International Joint Conference on Neural Networks</i><br>\nIEEE World Congress on Computational Intelligence<br>\n(pp. 195-200). IEEE. <a href=\"https://doi.org/10.1109/IJCNN.2008.4633789\">10.1109/IJCNN.2008.4633789</a></p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.Rasco.__init__": {"fullname": "sslearn.wrapper.Rasco.__init__", "modulename": "sslearn.wrapper", "qualname": "Rasco.__init__", "kind": "function", "doc": "<p>Co-Training based on random subspaces</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations allowed. Should be greater than or equal to 0.\nIf is -1 then will be infinite iterations until U be empty, by default 10</li>\n<li><strong>n_estimators</strong> (int, optional):\nThe number of base estimators in the ensemble., by default 30</li>\n<li><strong>subspace_size</strong> (int, optional):\nThe number of features for each subspace. If it is None will be the half of the features size., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">subspace_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.Rasco.fit": {"fullname": "sslearn.wrapper.Rasco.fit", "modulename": "sslearn.wrapper", "qualname": "Rasco.fit", "kind": "function", "doc": "<p>Build a Rasco classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (Rasco):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.RelRasco": {"fullname": "sslearn.wrapper.RelRasco", "modulename": "sslearn.wrapper", "qualname": "RelRasco", "kind": "class", "doc": "<h2 id=\"co-training-based-on-relevant-random-subspaces\"><strong>Co-Training based on relevant random subspaces</strong></h2>\n\n<p>Is a variation of <code>sslearn.wrapper.Rasco</code> that uses the mutual information of each feature to select the random subspaces.\nThe process of training is the same as Rasco.</p>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">RelRasco</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">relrasco</span> <span class=\"o\">=</span> <span class=\"n\">RelRasco</span><span class=\"p\">()</span>\n<span class=\"n\">relrasco</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">relrasco</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Yaslan, Y., &amp; Cataltepe, Z. (2010).<br>\nCo-training with relevant random subspaces.<br>\n<i>Neurocomputing</i>, 73(10-12), 1652-1661.<br>\n<a href=\"https://doi.org/10.1016/j.neucom.2010.01.018\">10.1016/j.neucom.2010.01.018</a></p>\n", "bases": "sslearn.wrapper._co.Rasco"}, "sslearn.wrapper.RelRasco.__init__": {"fullname": "sslearn.wrapper.RelRasco.__init__", "modulename": "sslearn.wrapper", "qualname": "RelRasco.__init__", "kind": "function", "doc": "<p>Co-Training with relevant random subspaces</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations allowed. Should be greater than or equal to 0.\nIf is -1 then will be infinite iterations until U be empty, by default 10</li>\n<li><strong>n_estimators</strong> (int, optional):\nThe number of base estimators in the ensemble., by default 30</li>\n<li><strong>subspace_size</strong> (int, optional):\nThe number of features for each subspace. If it is None will be the half of the features size., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel. -1 means using all processors., by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">subspace_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.CoForest": {"fullname": "sslearn.wrapper.CoForest", "modulename": "sslearn.wrapper", "qualname": "CoForest", "kind": "class", "doc": "<h2 id=\"coforest-classifier-random-forest-co-training\"><strong>CoForest classifier. Random Forest co-training</strong></h2>\n\n<p>Ensemble method for CoTraining based on Random Forest.</p>\n\n<p>The main process is:</p>\n\n<ol>\n<li>Train a committee of classifiers using bootstrap.</li>\n<li>While any base classifier is retrained:\n<ol>\n<li>Predict the instances from the unlabeled set.</li>\n<li>Select the instances with the highest probability.</li>\n<li>Label the instances with the highest probability</li>\n<li>Add the instances to the labeled set only if the error is not bigger than the previous error.</li>\n<li>Retrain the classifier with the new instances.</li>\n</ol></li>\n<li>Combine the probabilities of each classifier.</li>\n</ol>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"example\"><strong>Example</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">CoForest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sslearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">artificial_ssl_dataset</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">artificial_ssl_dataset</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label_rate</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">coforest</span> <span class=\"o\">=</span> <span class=\"n\">CoForest</span><span class=\"p\">()</span>\n<span class=\"n\">coforest</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">coforest</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_unlabel</span><span class=\"p\">,</span> <span class=\"n\">y_unlabel</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Li, M., &amp; Zhou, Z.-H. (2007).<br>\nImprove Computer-Aided Diagnosis With Machine Learning Techniques Using Undiagnosed Samples.<br>\n<i>IEEE Transactions on Systems, Man, and Cybernetics - Part A: Systems and Humans</i>,<br>\n37(6), 1088-1098. <a href=\"https://doi.org/10.1109/tsmca.2007.904745\">10.1109/tsmca.2007.904745</a></p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.CoForest.__init__": {"fullname": "sslearn.wrapper.CoForest.__init__", "modulename": "sslearn.wrapper", "qualname": "CoForest.__init__", "kind": "function", "doc": "<p>Generate a CoForest classifier.\nA SSL Random Forest adaption for CoTraining. </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_estimators</strong> (int, optional):\nThe number of base estimators in the ensemble., by default 7</li>\n<li><strong>threshold</strong> (float, optional):\nThe decision threshold. Should be in [0, 1)., by default 0.5</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel for both fit and predict., by default None</li>\n<li><strong>bootstrap</strong> (bool, optional):\nWhether bootstrap samples are used when building estimators., by default True</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>**kwards</strong> (dict, optional):\nAdditional parameters to be passed to base_estimator, by default None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.75</span>,</span><span class=\"param\">\t<span class=\"n\">bootstrap</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">&#39;1.0.3&#39;</span></span>)</span>"}, "sslearn.wrapper.CoForest.fit": {"fullname": "sslearn.wrapper.CoForest.fit", "modulename": "sslearn.wrapper", "qualname": "CoForest.fit", "kind": "function", "doc": "<p>Build a CoForest classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (CoForest):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.TriTraining": {"fullname": "sslearn.wrapper.TriTraining", "modulename": "sslearn.wrapper", "qualname": "TriTraining", "kind": "class", "doc": "<p><strong>TriTraining. Trio of classifiers with bootstrapping.</strong></p>\n\n<p>The main process is:</p>\n\n<ol>\n<li>Generate three classifiers using bootstrapping.</li>\n<li>Iterate until convergence:\n<ol>\n<li>Calculate the error between two hypotheses.</li>\n<li>If the error is less than the previous error, generate a dataset with the instances where both hypotheses agree.</li>\n<li>Retrain the classifiers with the new dataset and the original labeled dataset.</li>\n</ol></li>\n<li>Combine the predictions of the three classifiers.</li>\n</ol>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Zhi-Hua Zhou and Ming Li,<br>\nTri-training: exploiting unlabeled data using three classifiers,<br>\nin <i>IEEE Transactions on Knowledge and Data Engineering</i>,<br>\nvol. 17, no. 11, pp. 1529-1541, Nov. 2005,<br>\n<a href=\"https://doi.org/10.1109/TKDE.2005.186\">10.1109/TKDE.2005.186</a></p>\n", "bases": "sslearn.wrapper._co.BaseCoTraining"}, "sslearn.wrapper.TriTraining.__init__": {"fullname": "sslearn.wrapper.TriTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "TriTraining.__init__", "kind": "function", "doc": "<p>TriTraining. Trio of classifiers with bootstrapping.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_samples</strong> (int, optional):\nNumber of samples to generate.\nIf left to None this is automatically set to the first dimension of the arrays., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of jobs to run in parallel for both <code>fit</code> and <code>predict</code>.\n<code>None</code> means 1 unless in a <code>joblib.parallel_backend</code> context.\n<code>-1</code> means using all processors., by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.TriTraining.fit": {"fullname": "sslearn.wrapper.TriTraining.fit", "modulename": "sslearn.wrapper", "qualname": "TriTraining.fit", "kind": "function", "doc": "<p>Build a TriTraining classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabeled.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (TriTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "sslearn.wrapper.DeTriTraining": {"fullname": "sslearn.wrapper.DeTriTraining", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining", "kind": "class", "doc": "<p><strong>TriTraining with Data Editing.</strong></p>\n\n<p>It is a variation of the TriTraining, the main difference is that the instances are depurated in each iteration.\nIt means that the instances with their neighbors that have the same class are kept, the rest are removed.\nAt the end of the iterations, the instances are clustered and the class is assigned to the cluster centroid.</p>\n\n<h2 id=\"methods\"><strong>Methods</strong></h2>\n\n<ul>\n<li><code>fit</code>: Fit the model with the labeled instances.</li>\n<li><code>predict</code> : Predict the class for each instance.</li>\n<li><code>predict_proba</code>: Predict the probability for each class.</li>\n<li><code>score</code>: Return the mean accuracy on the given test data and labels.</li>\n</ul>\n\n<h2 id=\"references\"><strong>References</strong></h2>\n\n<p>Deng C., Guo M.Z. (2006)<br>\nTri-training and Data Editing Based Semi-supervised Clustering Algorithm, <br>\nin <i>Gelbukh A., Reyes-Garcia C.A. (eds) MICAI 2006: Advances in Artificial Intelligence. MICAI 2006.</i><br>\nLecture Notes in Computer Science, vol 4293. Springer, Berlin, Heidelberg.<br>\n<a href=\"https://doi.org/10.1007/11925231_61\">10.1007/11925231_61</a></p>\n", "bases": "sslearn.wrapper._tritraining.TriTraining"}, "sslearn.wrapper.DeTriTraining.__init__": {"fullname": "sslearn.wrapper.DeTriTraining.__init__", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining.__init__", "kind": "function", "doc": "<p>DeTriTraining - TriTraining with Depurated and Clustering.\nAvoid the noise generated by the TriTraining algorithm by depurating the enlarged dataset and clustering the instances.        </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_estimator</strong> (ClassifierMixin, optional):\nAn estimator object implementing fit and predict_proba, by default DecisionTreeClassifier()</li>\n<li><strong>n_samples</strong> (int, optional):\nNumber of samples to generate. \nIf left to None this is automatically set to the first dimension of the arrays., by default None</li>\n<li><strong>k_neighbors</strong> (int, optional):\nNumber of neighbors for depurate classification. \nIf at least k_neighbors/2+1 have a class other than the one predicted, the class is ignored., by default 3</li>\n<li><strong>mode</strong> (string, optional):\nHow to calculate the cluster each instance belongs to.\nIf <code>seeded</code> each instance belong to nearest cluster.\nIf <code>constrained</code> each instance belong to nearest cluster unless the instance is in to enlarged dataset, \nthen the instance belongs to the cluster of its class., by default <code>seeded</code></li>\n<li><strong>max_iterations</strong> (int, optional):\nMaximum number of iterations, by default 100</li>\n<li><strong>n_jobs</strong> (int, optional):\nThe number of parallel jobs to run for neighbors search. \nNone means 1 unless in a joblib.parallel_backend context. -1 means using all processors. \nDoesn't affect fit method., by default None</li>\n<li><strong>random_state</strong> (int, RandomState instance, optional):\ncontrols the randomness of the estimator, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"o\">=</span><span class=\"n\">DecisionTreeClassifier</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">k_neighbors</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;seeded&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "sslearn.wrapper.DeTriTraining.fit": {"fullname": "sslearn.wrapper.DeTriTraining.fit", "modulename": "sslearn.wrapper", "qualname": "DeTriTraining.fit", "kind": "function", "doc": "<p>Build a DeTriTraining classifier from the training set (X, y).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> ({array-like, sparse matrix} of shape (n_samples, n_features)):\nThe training input samples.</li>\n<li><strong>y</strong> (array-like of shape (n_samples,)):\nThe target values (class labels), -1 if unlabel.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong> (DeTriTraining):\nFitted estimator.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwards</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"sslearn": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3273}, "sslearn.base": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 73}, "sslearn.base.get_dataset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 117}, "sslearn.base.FakedProbaClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 9, "doc": 155}, "sslearn.base.FakedProbaClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 40}, "sslearn.base.FakedProbaClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 68}, "sslearn.base.FakedProbaClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 59}, "sslearn.base.FakedProbaClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 78}, "sslearn.base.OneVsRestSSLClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 37}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 63}, "sslearn.base.OneVsRestSSLClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 80}, "sslearn.base.OneVsRestSSLClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 66}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 162}, "sslearn.datasets": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 85}, "sslearn.datasets.read_csv": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 134}, "sslearn.datasets.read_keel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 158}, "sslearn.datasets.secure_dataset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 70}, "sslearn.datasets.save_keel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 163}, "sslearn.model_selection": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 73}, "sslearn.model_selection.artificial_ssl_dataset": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 329}, "sslearn.model_selection.StratifiedKFoldSS": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 52}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 73}, "sslearn.model_selection.StratifiedKFoldSS.split": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 137}, "sslearn.restricted": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 182}, "sslearn.restricted.conflict_rate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 113}, "sslearn.restricted.combine_predictions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 148}, "sslearn.restricted.feature_fusion": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 787}, "sslearn.restricted.probability_fusion": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 796}, "sslearn.restricted.WhoIsWhoClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 9, "doc": 51}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 118}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 113}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 84}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 92}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 63}, "sslearn.subview": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 58}, "sslearn.subview.SubViewClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 315}, "sslearn.subview.SubViewClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 64}, "sslearn.subview.SubViewRegressor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 315}, "sslearn.subview.SubViewRegressor.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 56}, "sslearn.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 129}, "sslearn.utils.safe_division": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 73}, "sslearn.utils.confidence_interval": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 102}, "sslearn.utils.choice_with_proportion": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 111}, "sslearn.utils.calculate_prior_probability": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 56}, "sslearn.utils.mode": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 80}, "sslearn.utils.check_n_jobs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 64}, "sslearn.wrapper": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 130}, "sslearn.wrapper.SelfTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 332}, "sslearn.wrapper.SelfTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 361}, "sslearn.wrapper.SelfTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 85}, "sslearn.wrapper.Setred": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 459}, "sslearn.wrapper.Setred.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 262}, "sslearn.wrapper.Setred.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.Setred.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 71}, "sslearn.wrapper.Setred.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 82}, "sslearn.wrapper.Setred.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 140}, "sslearn.wrapper.CoTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 692}, "sslearn.wrapper.CoTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 200}, "sslearn.wrapper.CoTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 174}, "sslearn.wrapper.CoTraining.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 90}, "sslearn.wrapper.CoTraining.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 86}, "sslearn.wrapper.CoTraining.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 162}, "sslearn.wrapper.CoTrainingByCommittee": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 489}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 107}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 71}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 82}, "sslearn.wrapper.CoTrainingByCommittee.score": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 129}, "sslearn.wrapper.DemocraticCoLearning": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 609}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 167}, "sslearn.wrapper.DemocraticCoLearning.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 95}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 63}, "sslearn.wrapper.Rasco": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 495}, "sslearn.wrapper.Rasco.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 144}, "sslearn.wrapper.Rasco.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.RelRasco": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 386}, "sslearn.wrapper.RelRasco.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 169}, "sslearn.wrapper.CoForest": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 477}, "sslearn.wrapper.CoForest.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 166}, "sslearn.wrapper.CoForest.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.TriTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 213}, "sslearn.wrapper.TriTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 140}, "sslearn.wrapper.TriTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}, "sslearn.wrapper.DeTriTraining": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 198}, "sslearn.wrapper.DeTriTraining.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 259}, "sslearn.wrapper.DeTriTraining.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 79}}, "length": 86, "save": true}, "index": {"qualname": {"root": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 3}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.mode": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 86}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 5}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 12}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 5}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}}, "df": 11}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}}, "df": 3}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.mode": {"tf": 1}}, "df": 1, "l": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 40}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 7}}}}}, "n": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 8}, "1": {"0": {"0": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 3}, "docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}, "2": {"5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}, "3": {"0": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 3}, "9": {"docs": {"sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 9}, "docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 5}, "4": {"0": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 2}, "7": {"5": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3}, "docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}, "8": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}, "9": {"5": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"sslearn.base.get_dataset": {"tf": 3.7416573867739413}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 2.8284271247461903}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 4.242640687119285}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 3.7416573867739413}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 3.7416573867739413}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 4.58257569495584}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 4.898979485566356}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 4.47213595499958}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 4.47213595499958}, "sslearn.datasets.read_csv": {"tf": 6.48074069840786}, "sslearn.datasets.read_keel": {"tf": 7.615773105863909}, "sslearn.datasets.secure_dataset": {"tf": 3.7416573867739413}, "sslearn.datasets.save_keel": {"tf": 8.774964387392123}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 7.681145747868608}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 5.291502622129181}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 4.242640687119285}, "sslearn.restricted.conflict_rate": {"tf": 4.69041575982343}, "sslearn.restricted.combine_predictions": {"tf": 5.291502622129181}, "sslearn.restricted.feature_fusion": {"tf": 4.69041575982343}, "sslearn.restricted.probability_fusion": {"tf": 4.69041575982343}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 5.0990195135927845}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 5.656854249492381}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 4.242640687119285}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 4.242640687119285}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 3.7416573867739413}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 3.7416573867739413}, "sslearn.subview.SubViewRegressor.predict": {"tf": 3.7416573867739413}, "sslearn.utils.safe_division": {"tf": 4.242640687119285}, "sslearn.utils.confidence_interval": {"tf": 5.0990195135927845}, "sslearn.utils.choice_with_proportion": {"tf": 5.0990195135927845}, "sslearn.utils.calculate_prior_probability": {"tf": 3.1622776601683795}, "sslearn.utils.mode": {"tf": 3.1622776601683795}, "sslearn.utils.check_n_jobs": {"tf": 3.1622776601683795}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 7.483314773547883}, "sslearn.wrapper.SelfTraining.fit": {"tf": 4.242640687119285}, "sslearn.wrapper.Setred.__init__": {"tf": 9.433981132056603}, "sslearn.wrapper.Setred.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.Setred.predict": {"tf": 4.47213595499958}, "sslearn.wrapper.Setred.predict_proba": {"tf": 4.47213595499958}, "sslearn.wrapper.Setred.score": {"tf": 5.0990195135927845}, "sslearn.wrapper.CoTraining.__init__": {"tf": 8.366600265340756}, "sslearn.wrapper.CoTraining.fit": {"tf": 8.18535277187245}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 5.291502622129181}, "sslearn.wrapper.CoTraining.predict": {"tf": 5.291502622129181}, "sslearn.wrapper.CoTraining.score": {"tf": 5.656854249492381}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 7.211102550927978}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 3.7416573867739413}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 3.7416573867739413}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 5.0990195135927845}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 9}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 5.0990195135927845}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 3.7416573867739413}, "sslearn.wrapper.Rasco.__init__": {"tf": 7.810249675906654}, "sslearn.wrapper.Rasco.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.RelRasco.__init__": {"tf": 7.810249675906654}, "sslearn.wrapper.CoForest.__init__": {"tf": 8.48528137423857}, "sslearn.wrapper.CoForest.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.TriTraining.__init__": {"tf": 6.557438524302}, "sslearn.wrapper.TriTraining.fit": {"tf": 4.898979485566356}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 8.48528137423857}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 4.898979485566356}}, "df": 62, "x": {"2": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}}, "df": 3}, "docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 39}, "y": {"docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 25}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14, "s": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 32}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 10, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 22}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 8}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 18}}, "s": {"docs": {"sslearn.wrapper.Setred.fit": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 6}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 6}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 7}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 10}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "o": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 8}}}}}}}}}, "doc": {"root": {"0": {"1": {"8": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}, "docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}, "5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "8": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 3}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2.8284271247461903}, "sslearn.restricted.probability_fusion": {"tf": 2.8284271247461903}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 22}, "1": {"0": {"0": {"7": {"docs": {}, "df": 0, "/": {"1": {"1": {"4": {"3": {"0": {"9": {"1": {"9": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"2": {"5": {"2": {"3": {"1": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}, "1": {"6": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "j": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 3}}}, "docs": {}, "df": 0}, "2": {"1": {"8": {"8": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}, "8": {"8": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"8": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn": {"tf": 3.872983346207417}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 16}, "1": {"0": {"9": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "4": {"5": {"docs": {}, "df": 0, "/": {"2": {"7": {"9": {"9": {"4": {"3": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "9": {"8": {"9": {"4": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}, "2": {"9": {"4": {"8": {"5": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "5": {"2": {"9": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"1": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"5": {"2": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"1": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}}}, "7": {"0": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}, "docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}, "8": {"6": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}, "9": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"5": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}, "6": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "9": {"5": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "8": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn": {"tf": 3.4641016151377544}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 3.3166247903554}, "sslearn.restricted.probability_fusion": {"tf": 3.3166247903554}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 41}, "2": {"0": {"0": {"4": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}}, "df": 2}, "6": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}, "1": {"0": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "7": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"1": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}, "4": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "5": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "7": {"9": {"9": {"6": {"2": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 7}, "3": {"0": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 3}, "1": {"1": {"5": {"docs": {}, "df": 0, "/": {"9": {"8": {"1": {"6": {"5": {"8": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}, "5": {"1": {"8": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}, "9": {"docs": {"sslearn": {"tf": 4.69041575982343}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.subview.SubViewClassifier": {"tf": 2.449489742783178}, "sslearn.subview.SubViewRegressor": {"tf": 2.449489742783178}}, "df": 5}, "docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 8}, "4": {"0": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}, "2": {"9": {"3": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn": {"tf": 2.449489742783178}}, "df": 1}, "6": {"3": {"3": {"7": {"8": {"9": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}, "docs": {"sslearn": {"tf": 1}}, "df": 1}, "5": {"2": {"8": {"1": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"3": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"2": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"4": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}, "6": {"0": {"2": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}, "7": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}, "7": {"0": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "1": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}, "3": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}, "5": {"6": {"5": {"2": {"2": {"1": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 2}, "docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2}, "8": {"0": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}, "9": {"0": {"4": {"7": {"4": {"5": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}, "2": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "5": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 3}, "8": {"1": {"6": {"8": {"4": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn": {"tf": 40.963398296528084}, "sslearn.base": {"tf": 5.744562646538029}, "sslearn.base.get_dataset": {"tf": 6.708203932499369}, "sslearn.base.FakedProbaClassifier": {"tf": 9.16515138991168}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 3.872983346207417}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 5.744562646538029}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 5.196152422706632}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 5.0990195135927845}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 3.1622776601683795}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 4.358898943540674}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 5.744562646538029}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 5.196152422706632}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 6.244997998398398}, "sslearn.datasets": {"tf": 5.385164807134504}, "sslearn.datasets.read_csv": {"tf": 6.928203230275509}, "sslearn.datasets.read_keel": {"tf": 7.54983443527075}, "sslearn.datasets.secure_dataset": {"tf": 5.830951894845301}, "sslearn.datasets.save_keel": {"tf": 7.3484692283495345}, "sslearn.model_selection": {"tf": 5.744562646538029}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 9.695359714832659}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 3.7416573867739413}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 4.898979485566356}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 7.0710678118654755}, "sslearn.restricted": {"tf": 8.18535277187245}, "sslearn.restricted.conflict_rate": {"tf": 6.244997998398398}, "sslearn.restricted.combine_predictions": {"tf": 7}, "sslearn.restricted.feature_fusion": {"tf": 21.400934559032695}, "sslearn.restricted.probability_fusion": {"tf": 21.400934559032695}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 4}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 5.744562646538029}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 6.244997998398398}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 5.656854249492381}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 5.744562646538029}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 5.196152422706632}, "sslearn.subview": {"tf": 4.69041575982343}, "sslearn.subview.SubViewClassifier": {"tf": 14.422205101855956}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 5.196152422706632}, "sslearn.subview.SubViewRegressor": {"tf": 14.422205101855956}, "sslearn.subview.SubViewRegressor.predict": {"tf": 5.196152422706632}, "sslearn.utils": {"tf": 5.656854249492381}, "sslearn.utils.safe_division": {"tf": 5.830951894845301}, "sslearn.utils.confidence_interval": {"tf": 6.324555320336759}, "sslearn.utils.choice_with_proportion": {"tf": 6.324555320336759}, "sslearn.utils.calculate_prior_probability": {"tf": 5}, "sslearn.utils.mode": {"tf": 5.385164807134504}, "sslearn.utils.check_n_jobs": {"tf": 5.291502622129181}, "sslearn.wrapper": {"tf": 7.810249675906654}, "sslearn.wrapper.SelfTraining": {"tf": 14.52583904633395}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 8.774964387392123}, "sslearn.wrapper.SelfTraining.fit": {"tf": 5.916079783099616}, "sslearn.wrapper.Setred": {"tf": 14.866068747318506}, "sslearn.wrapper.Setred.__init__": {"tf": 7.3484692283495345}, "sslearn.wrapper.Setred.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.Setred.predict": {"tf": 5.0990195135927845}, "sslearn.wrapper.Setred.predict_proba": {"tf": 5.0990195135927845}, "sslearn.wrapper.Setred.score": {"tf": 7}, "sslearn.wrapper.CoTraining": {"tf": 20.174241001832016}, "sslearn.wrapper.CoTraining.__init__": {"tf": 6.708203932499369}, "sslearn.wrapper.CoTraining.fit": {"tf": 7.3484692283495345}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 5.656854249492381}, "sslearn.wrapper.CoTraining.predict": {"tf": 5.656854249492381}, "sslearn.wrapper.CoTraining.score": {"tf": 7.14142842854285}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 16.186414056238647}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 5.477225575051661}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 5.0990195135927845}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 5.0990195135927845}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 6.164414002968976}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 18.027756377319946}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 7.0710678118654755}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 6}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 5.196152422706632}, "sslearn.wrapper.Rasco": {"tf": 16.278820596099706}, "sslearn.wrapper.Rasco.__init__": {"tf": 5.830951894845301}, "sslearn.wrapper.Rasco.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.RelRasco": {"tf": 15.198684153570664}, "sslearn.wrapper.RelRasco.__init__": {"tf": 6.244997998398398}, "sslearn.wrapper.CoForest": {"tf": 16.15549442140351}, "sslearn.wrapper.CoForest.__init__": {"tf": 6.782329983125268}, "sslearn.wrapper.CoForest.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.TriTraining": {"tf": 8.888194417315589}, "sslearn.wrapper.TriTraining.__init__": {"tf": 6.4031242374328485}, "sslearn.wrapper.TriTraining.fit": {"tf": 5.744562646538029}, "sslearn.wrapper.DeTriTraining": {"tf": 7.416198487095663}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 7.14142842854285}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 5.744562646538029}}, "df": 86, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 13}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 2}, "sslearn.model_selection": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 13}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.subview": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "f": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 23, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 2}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2}, "sslearn.restricted": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 31, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}}, "df": 5}}}, "s": {"docs": {"sslearn.model_selection": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.get_dataset": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets": {"tf": 1.7320508075688772}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 15}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"sslearn": {"tf": 3.4641016151377544}}, "df": 1}}}}}}, "b": {"docs": {"sslearn.subview": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"1": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"sslearn": {"tf": 2.8284271247461903}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 2}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 2}, "sslearn.subview.SubViewRegressor": {"tf": 2}}, "df": 4}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 3.605551275463989}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 20}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"sslearn": {"tf": 4}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 20}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}}, "df": 3, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.model_selection": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2}, "sslearn.utils": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 30}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 7, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 2}}, "y": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 7}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.7320508075688772}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.get_dataset": {"tf": 2.23606797749979}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1.7320508075688772}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 42}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 2.449489742783178}, "sslearn.restricted.probability_fusion": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 16}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 2}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.7320508075688772}, "sslearn.utils.confidence_interval": {"tf": 1.7320508075688772}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2}, "sslearn.wrapper.Setred.score": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.7320508075688772}}, "df": 51}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}}, "df": 2}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 3}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 17}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}}, "df": 4}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}, "t": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}}, "df": 1}, "c": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 2.449489742783178}}, "df": 1}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 3.4641016151377544}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 12}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}, "\u00f3": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.utils": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1.7320508075688772}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 46}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.mode": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}}, "df": 13, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"sslearn": {"tf": 3.7416573867739413}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 3.3166247903554}, "sslearn.restricted.probability_fusion": {"tf": 3.3166247903554}}, "df": 4, "s": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 2}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "o": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base.get_dataset": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 3.1622776601683795}, "sslearn.restricted.probability_fusion": {"tf": 3.1622776601683795}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}, "sslearn.utils.mode": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 29, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 16}}, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 30}}}}, "c": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 2}, "sslearn.datasets": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 3}, "r": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 11.61895003862225}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 3.3166247903554}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 2.6457513110645907}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 4.123105625617661}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 2.23606797749979}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2.6457513110645907}, "sslearn.restricted": {"tf": 3.605551275463989}, "sslearn.restricted.conflict_rate": {"tf": 2.6457513110645907}, "sslearn.restricted.combine_predictions": {"tf": 3.3166247903554}, "sslearn.restricted.feature_fusion": {"tf": 4}, "sslearn.restricted.probability_fusion": {"tf": 4.358898943540674}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2.6457513110645907}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 2.6457513110645907}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 2}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewRegressor": {"tf": 2}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 3}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 2.449489742783178}, "sslearn.utils.choice_with_proportion": {"tf": 2}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1.4142135623730951}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 4.242640687119285}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 4.58257569495584}, "sslearn.wrapper.Setred.__init__": {"tf": 3.3166247903554}, "sslearn.wrapper.Setred.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 4.69041575982343}, "sslearn.wrapper.CoTraining.__init__": {"tf": 3.872983346207417}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 4.47213595499958}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 4.795831523312719}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 4.47213595499958}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.Rasco.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco": {"tf": 3.1622776601683795}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoForest": {"tf": 4.47213595499958}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining": {"tf": 4}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining": {"tf": 4.123105625617661}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 3.872983346207417}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.7320508075688772}}, "df": 79, "m": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 2}, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 17}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 3.605551275463989}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}}, "df": 26}, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.7320508075688772}}, "df": 2}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 3}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 3.1622776601683795}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"sslearn": {"tf": 4.58257569495584}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted": {"tf": 1.7320508075688772}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 2.449489742783178}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.safe_division": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 3.4641016151377544}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 3.1622776601683795}}, "df": 46, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 2}}}, "m": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 20, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 13}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 5.477225575051661}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 3}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 3.1622776601683795}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 29}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 20}}, "i": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 2}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}, "o": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"0": {"0": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 3.4641016151377544}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 35}, "t": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 1.7320508075688772}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 12}}}}, "e": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"sslearn": {"tf": 5.385164807134504}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2.23606797749979}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.Setred": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 39, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.449489742783178}}, "df": 29, "s": {"docs": {"sslearn": {"tf": 4}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 2.8284271247461903}, "sslearn.restricted.probability_fusion": {"tf": 2.6457513110645907}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 3}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 2.449489742783178}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 28}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 2.23606797749979}, "sslearn.subview.SubViewRegressor": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}}, "df": 5}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 21}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 5}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 2}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.23606797749979}}, "df": 20, "o": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 3.4641016151377544}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.449489742783178}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}}, "df": 14}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 9}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 5.656854249492381}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 9}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "f": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 2}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 33}, "d": {"docs": {}, "df": 0, "x": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1, "d": {"docs": {"sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {"sslearn": {"tf": 5}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.datasets": {"tf": 2.449489742783178}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted": {"tf": 2}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.subview": {"tf": 2.23606797749979}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1.7320508075688772}, "sslearn.utils.mode": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2.449489742783178}, "sslearn.wrapper.Setred.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 55, "n": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14, "d": {"docs": {"sslearn": {"tf": 4.898979485566356}, "sslearn.base": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2.6457513110645907}, "sslearn.restricted.probability_fusion": {"tf": 2.6457513110645907}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 2.449489742783178}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 2}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 33}, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 2.449489742783178}}, "df": 1}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.wrapper": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "l": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 15, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 8}}, "s": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 3.605551275463989}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 2}}, "df": 14}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 13}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1.7320508075688772}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 2.449489742783178}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}, "sslearn.utils.mode": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.fit": {"tf": 2}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.score": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 46, "s": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 7}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 17, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 4, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 2}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 12}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 7}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 2}}, "df": 1, "s": {"docs": {"sslearn": {"tf": 2}}, "df": 1}}, "d": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"sslearn": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 3, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 64}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 6, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"2": {"0": {"2": {"0": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "s": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 2.23606797749979}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 23, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.calculate_prior_probability": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 18}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 19}}}}}}}}, "s": {"docs": {"sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "d": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 2.23606797749979}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 2}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 2.23606797749979}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 2}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 40, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 8, "s": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 2}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 9}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 19}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils": {"tf": 1}}, "df": 1, "i": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}}, "df": 2, "f": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "\u00e9": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "p": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 5}}, "f": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 3.605551275463989}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.6457513110645907}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2}, "sslearn.restricted": {"tf": 1.7320508075688772}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.6457513110645907}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.449489742783178}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 50, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 5, "s": {"docs": {"sslearn.datasets": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 9, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.get_dataset": {"tf": 2.449489742783178}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.7320508075688772}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 43}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.utils": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 6}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 3.1622776601683795}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn": {"tf": 4.242640687119285}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.6457513110645907}, "sslearn.wrapper.Rasco": {"tf": 2}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest": {"tf": 2}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 31}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}}, "df": 4}}, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 30, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"sslearn.wrapper.SelfTraining.fit": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}}}}, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 8}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 12}}}}}, "m": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"sslearn.base.get_dataset": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 31}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}}, "df": 2}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3}}, "x": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 8}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 2.449489742783178}, "sslearn.subview.SubViewRegressor": {"tf": 2.449489742783178}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.mode": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 6, "l": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 19}, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1.4142135623730951}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 3.3166247903554}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 3.1622776601683795}, "sslearn.restricted.probability_fusion": {"tf": 3.1622776601683795}}, "df": 6}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"sslearn": {"tf": 2.8284271247461903}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 8, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 16, "s": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 11}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 13, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "r": {"docs": {"sslearn.base.OneVsRestSSLClassifier": {"tf": 1}}, "df": 1}}, "f": {"docs": {"sslearn": {"tf": 5.0990195135927845}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 2.23606797749979}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2.6457513110645907}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.6457513110645907}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2}, "sslearn.restricted": {"tf": 2.6457513110645907}, "sslearn.restricted.conflict_rate": {"tf": 2.23606797749979}, "sslearn.restricted.combine_predictions": {"tf": 2.6457513110645907}, "sslearn.restricted.feature_fusion": {"tf": 3}, "sslearn.restricted.probability_fusion": {"tf": 3}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 2.6457513110645907}, "sslearn.utils.safe_division": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 2}, "sslearn.utils.choice_with_proportion": {"tf": 3.1622776601683795}, "sslearn.utils.calculate_prior_probability": {"tf": 2}, "sslearn.utils.mode": {"tf": 3.3166247903554}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2}, "sslearn.wrapper.Setred.score": {"tf": 2}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict": {"tf": 2}, "sslearn.wrapper.CoTraining.score": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 80}, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 2}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 23, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 5}}, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base.get_dataset": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 31, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 14}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 2.449489742783178}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.6457513110645907}}, "df": 24}}}}}}}}, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 1}}, "df": 2, "a": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 3.1622776601683795}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}}, "df": 39, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 5}, "sslearn.base": {"tf": 1.4142135623730951}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.datasets": {"tf": 2.23606797749979}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 2.6457513110645907}, "sslearn.model_selection": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 25, "s": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.base": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.model_selection": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 14}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.get_dataset": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 2.23606797749979}, "sslearn.datasets.save_keel": {"tf": 2.6457513110645907}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.7320508075688772}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 3}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.6457513110645907}}, "df": 29}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1, "d": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 3.1622776601683795}, "sslearn.subview.SubViewClassifier": {"tf": 2}, "sslearn.subview.SubViewRegressor": {"tf": 2}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}}, "df": 2, "i": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 5, "n": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.datasets": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 5}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.safe_division": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.safe_division": {"tf": 1.7320508075688772}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.safe_division": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 12, "s": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"0": {"2": {"3": {"9": {"9": {"2": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "/": {"8": {"7": {"5": {"docs": {}, "df": 0, "/": {"2": {"0": {"2": {"1": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}, "s": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 2.8284271247461903}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 30, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.utils.mode": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.utils.calculate_prior_probability": {"tf": 1.4142135623730951}, "sslearn.utils.mode": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.8284271247461903}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.449489742783178}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 35}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 9}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.7320508075688772}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}}}, "j": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.check_n_jobs": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 8}}, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"2": {"0": {"1": {"1": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"0": {"4": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"2": {"0": {"2": {"4": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"sslearn": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 8, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 16}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 2.8284271247461903}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 2}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 2.23606797749979}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2.23606797749979}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 2}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 2}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1.7320508075688772}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.7320508075688772}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 2}, "sslearn.utils.check_n_jobs": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 2.449489742783178}, "sslearn.wrapper.Setred.score": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.fit": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTraining.predict": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.score": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 2.449489742783178}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 2.449489742783178}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 2}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.7320508075688772}}, "df": 56, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 5}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}}, "df": 23, "s": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"sslearn.utils.safe_division": {"tf": 2}}, "df": 1}}}}}}, "o": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 4, "t": {"docs": {"sslearn": {"tf": 1}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 20, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 2.23606797749979}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2.23606797749979}}, "df": 24}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}}, "df": 2}, "e": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}}, "df": 5, "/": {"2": {"docs": {}, "df": 0, "+": {"1": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "w": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 8}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}}, "df": 2}, ":": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTraining.fit": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.base.get_dataset": {"tf": 2.23606797749979}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 2}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 12}}}}}}, "y": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "c": {"4": {"3": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 3}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 3}, "sslearn.restricted.probability_fusion": {"tf": 3}}, "df": 4}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1}}, "df": 1}}, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.utils": {"tf": 2}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 10}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.wrapper": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 12, "d": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "b": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 2}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 2.8284271247461903}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 3}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 9, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.restricted": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}}, "df": 1}, "r": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 2.6457513110645907}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}}, "df": 4}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn.datasets": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.wrapper": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 10}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.datasets": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 4}}, "t": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 5}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.utils.mode": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"sslearn": {"tf": 2.8284271247461903}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2.449489742783178}, "sslearn.restricted.probability_fusion": {"tf": 2.449489742783178}}, "df": 5}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.4142135623730951}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 47, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1.7320508075688772}, "sslearn.restricted.feature_fusion": {"tf": 2}, "sslearn.restricted.probability_fusion": {"tf": 2.23606797749979}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.6457513110645907}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 32, "s": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 11}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 15}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1.7320508075688772}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 13}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 2.23606797749979}, "sslearn.model_selection": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 25}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 2.449489742783178}, "sslearn.subview.SubViewRegressor": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred": {"tf": 1.7320508075688772}}, "df": 4}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils.safe_division": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 2}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.utils": {"tf": 2}, "sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}, "sslearn.utils.choice_with_proportion": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1, "e": {"docs": {"sslearn": {"tf": 3.7416573867739413}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.7320508075688772}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 25, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}}, "df": 3}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1.7320508075688772}, "sslearn.datasets.read_keel": {"tf": 2}, "sslearn.datasets.save_keel": {"tf": 2.449489742783178}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1.4142135623730951}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.RelRasco.__init__": {"tf": 2.449489742783178}, "sslearn.wrapper.CoForest.__init__": {"tf": 2.6457513110645907}, "sslearn.wrapper.TriTraining.__init__": {"tf": 2}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 3}}, "df": 35}, "u": {"0": {"5": {"5": {"docs": {}, "df": 0, "p": {"2": {"0": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 3}, "sslearn.base": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.__init__": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 2}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 20, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 8}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 3.4641016151377544}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 11}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}}, "df": 2, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.utils.check_n_jobs": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {"sslearn": {"tf": 3.3166247903554}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.restricted": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 17}}}, "e": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 10, "d": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 10}, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 9}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.subview.SubViewClassifier": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.449489742783178}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 2}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 2}, "sslearn.wrapper.CoForest": {"tf": 2}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 21, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 2.449489742783178}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.4142135623730951}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}}, "df": 22}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.utils": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"sslearn": {"tf": 6.082762530298219}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 2.23606797749979}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 3.4641016151377544}, "sslearn.restricted.probability_fusion": {"tf": 3.4641016151377544}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2.6457513110645907}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.8284271247461903}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.6457513110645907}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 2.8284271247461903}, "sslearn.wrapper.CoForest": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 51, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "k": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.utils": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1.7320508075688772}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "u": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted": {"tf": 2}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}}, "df": 2, "s": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.utils.safe_division": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.datasets": {"tf": 1.4142135623730951}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.7320508075688772}, "sslearn.restricted.probability_fusion": {"tf": 1.7320508075688772}}, "df": 6, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 5}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 2.23606797749979}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.subview": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}}, "df": 9}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 14, "s": {"docs": {"sslearn.base.get_dataset": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.7320508075688772}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.safe_division": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.utils.mode": {"tf": 1}, "sslearn.utils.check_n_jobs": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 46}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 6, "s": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 12}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"sslearn": {"tf": 4.358898943540674}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 2}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 21, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 11}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 9}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.conflict_rate": {"tf": 2}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 15}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.23606797749979}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}}, "df": 5}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.datasets.save_keel": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "\u00ed": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 6}, "v": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 2}, "sslearn.base.FakedProbaClassifier": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.restricted": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 2.6457513110645907}, "sslearn.restricted.probability_fusion": {"tf": 2.449489742783178}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 13}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"sslearn.wrapper.Rasco.__init__": {"tf": 1}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {"sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1.7320508075688772}, "sslearn.restricted.combine_predictions": {"tf": 1.7320508075688772}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "a": {"docs": {"sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 3}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoForest": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"sslearn.datasets.read_keel": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 2}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "i": {"docs": {"sslearn.utils.confidence_interval": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1.4142135623730951}, "sslearn.wrapper.Rasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "w": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 2, "e": {"docs": {"sslearn": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.conflict_rate": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"sslearn": {"tf": 3.605551275463989}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.restricted": {"tf": 1.7320508075688772}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 2.6457513110645907}, "sslearn.restricted.probability_fusion": {"tf": 2.449489742783178}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.choice_with_proportion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.Setred": {"tf": 2}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 2.23606797749979}, "sslearn.wrapper.CoTraining.fit": {"tf": 2}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.23606797749979}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 2.23606797749979}, "sslearn.wrapper.TriTraining": {"tf": 2}, "sslearn.wrapper.TriTraining.__init__": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1}}, "df": 36, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 2.23606797749979}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.Rasco.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco.__init__": {"tf": 1.4142135623730951}}, "df": 13}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"sslearn": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"sslearn": {"tf": 1}}, "df": 1, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "g": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 7}}, "n": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.__init__": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {"sslearn.restricted": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 2}, "sslearn.restricted": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1}, "sslearn.wrapper.CoTraining.__init__": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"sslearn.wrapper.SelfTraining": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.wrapper.Rasco": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 3.1622776601683795}, "sslearn.wrapper": {"tf": 1.4142135623730951}, "sslearn.wrapper.SelfTraining": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 1}, "sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}, "sslearn.wrapper.RelRasco": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoForest": {"tf": 1}}, "df": 10, "s": {"docs": {"sslearn": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "t": {"docs": {"sslearn.wrapper.CoTraining.score": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1}}, "df": 2}}}, "k": {"docs": {"sslearn": {"tf": 1}, "sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}, "sslearn.wrapper.SelfTraining.__init__": {"tf": 2.23606797749979}, "sslearn.wrapper.DeTriTraining.__init__": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"sslearn": {"tf": 2}, "sslearn.datasets": {"tf": 2}, "sslearn.datasets.read_keel": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}}, "df": 4}, "p": {"docs": {"sslearn.restricted": {"tf": 1}, "sslearn.restricted.combine_predictions": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {"sslearn": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.utils.calculate_prior_probability": {"tf": 1}}, "df": 4, "s": {"docs": {"sslearn": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.__init__": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.Setred": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.__init__": {"tf": 1}}, "df": 3}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoForest.__init__": {"tf": 1}}, "df": 3}}}}}}, "x": {"1": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 5}, "docs": {"sslearn": {"tf": 5.5677643628300215}, "sslearn.base": {"tf": 1}, "sslearn.base.get_dataset": {"tf": 1.7320508075688772}, "sslearn.base.FakedProbaClassifier": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.base.FakedProbaClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.base.FakedProbaClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.base.OneVsRestSSLClassifier.fit": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict": {"tf": 1}, "sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1.4142135623730951}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.model_selection.artificial_ssl_dataset": {"tf": 1.7320508075688772}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1.4142135623730951}, "sslearn.restricted.feature_fusion": {"tf": 2.8284271247461903}, "sslearn.restricted.probability_fusion": {"tf": 2.8284271247461903}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.conflict_rate": {"tf": 1}, "sslearn.restricted.WhoIsWhoClassifier.predict": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.predict_proba": {"tf": 1.4142135623730951}, "sslearn.subview.SubViewClassifier": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewClassifier.predict_proba": {"tf": 1}, "sslearn.subview.SubViewRegressor": {"tf": 1.7320508075688772}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.wrapper.SelfTraining": {"tf": 2.6457513110645907}, "sslearn.wrapper.SelfTraining.fit": {"tf": 1}, "sslearn.wrapper.Setred": {"tf": 2.6457513110645907}, "sslearn.wrapper.Setred.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.Setred.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 3}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTrainingByCommittee.predict_proba": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTrainingByCommittee.score": {"tf": 1.7320508075688772}, "sslearn.wrapper.DemocraticCoLearning": {"tf": 2.6457513110645907}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.predict_proba": {"tf": 1}, "sslearn.wrapper.Rasco": {"tf": 2.8284271247461903}, "sslearn.wrapper.Rasco.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.RelRasco": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoForest": {"tf": 2.6457513110645907}, "sslearn.wrapper.CoForest.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.TriTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1.4142135623730951}}, "df": 54, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1, "g": {"docs": {"sslearn.wrapper.CoTraining": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {"sslearn.wrapper.DemocraticCoLearning.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"sslearn": {"tf": 4.69041575982343}, "sslearn.restricted.feature_fusion": {"tf": 2.449489742783178}, "sslearn.restricted.probability_fusion": {"tf": 2.449489742783178}, "sslearn.subview.SubViewClassifier": {"tf": 3.1622776601683795}, "sslearn.subview.SubViewRegressor": {"tf": 3.1622776601683795}}, "df": 5}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.base.OneVsRestSSLClassifier.predict_proba": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"sslearn": {"tf": 1.4142135623730951}, "sslearn.subview": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining": {"tf": 1.7320508075688772}, "sslearn.wrapper.CoTraining.__init__": {"tf": 2}, "sslearn.wrapper.CoTraining.fit": {"tf": 1.4142135623730951}, "sslearn.wrapper.CoTraining.predict_proba": {"tf": 1}, "sslearn.wrapper.CoTraining.predict": {"tf": 1}, "sslearn.wrapper.CoTraining.score": {"tf": 1}}, "df": 8, "s": {"docs": {"sslearn": {"tf": 2}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"sslearn.restricted.feature_fusion": {"tf": 1}, "sslearn.restricted.probability_fusion": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.SelfTraining.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.base.get_dataset": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"sslearn": {"tf": 1}, "sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.save_keel": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.utils.safe_division": {"tf": 1.7320508075688772}, "sslearn.utils.calculate_prior_probability": {"tf": 1}, "sslearn.wrapper.Setred.predict": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.predict": {"tf": 1}}, "df": 10, "s": {"docs": {"sslearn": {"tf": 1}, "sslearn.base.FakedProbaClassifier.fit": {"tf": 1}, "sslearn.restricted.conflict_rate": {"tf": 1}, "sslearn.restricted.feature_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.probability_fusion": {"tf": 1.4142135623730951}, "sslearn.restricted.WhoIsWhoClassifier.fit": {"tf": 1}, "sslearn.subview.SubViewRegressor.predict": {"tf": 1}, "sslearn.utils": {"tf": 1}, "sslearn.utils.confidence_interval": {"tf": 1}, "sslearn.utils.mode": {"tf": 1.4142135623730951}, "sslearn.wrapper.Setred.fit": {"tf": 1}, "sslearn.wrapper.CoTraining.fit": {"tf": 1}, "sslearn.wrapper.CoTrainingByCommittee.fit": {"tf": 1}, "sslearn.wrapper.DemocraticCoLearning.fit": {"tf": 1}, "sslearn.wrapper.Rasco.fit": {"tf": 1}, "sslearn.wrapper.CoForest.fit": {"tf": 1}, "sslearn.wrapper.TriTraining.fit": {"tf": 1}, "sslearn.wrapper.DeTriTraining.fit": {"tf": 1}}, "df": 18}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"sslearn.datasets.read_csv": {"tf": 1}, "sslearn.datasets.read_keel": {"tf": 1}, "sslearn.datasets.secure_dataset": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"sslearn.model_selection": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.model_selection.artificial_ssl_dataset": {"tf": 1}, "sslearn.model_selection.StratifiedKFoldSS.split": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"sslearn.wrapper.RelRasco": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"sslearn.wrapper.DemocraticCoLearning": {"tf": 2}}, "df": 1}}, "l": {"docs": {"sslearn.wrapper.TriTraining": {"tf": 1}, "sslearn.wrapper.DeTriTraining": {"tf": 1}}, "df": 2}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();